//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InSite.App.UserServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAssignments", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices.Models")]
    [System.SerializableAttribute()]
    public partial class UserAssignments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuilderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSysAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsPwdChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkinNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BpDescription {
            get {
                return this.BpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BpDescriptionField, value) != true)) {
                    this.BpDescriptionField = value;
                    this.RaisePropertyChanged("BpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BpName {
            get {
                return this.BpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BpNameField, value) != true)) {
                    this.BpNameField = value;
                    this.RaisePropertyChanged("BpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuilderName {
            get {
                return this.BuilderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuilderNameField, value) != true)) {
                    this.BuilderNameField = value;
                    this.RaisePropertyChanged("BuilderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSysAdmin {
            get {
                return this.IsSysAdminField;
            }
            set {
                if ((this.IsSysAdminField.Equals(value) != true)) {
                    this.IsSysAdminField = value;
                    this.RaisePropertyChanged("IsSysAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsPwdChange {
            get {
                return this.NeedsPwdChangeField;
            }
            set {
                if ((this.NeedsPwdChangeField.Equals(value) != true)) {
                    this.NeedsPwdChangeField = value;
                    this.RaisePropertyChanged("NeedsPwdChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkinName {
            get {
                return this.SkinNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkinNameField, value) != true)) {
                    this.SkinNameField = value;
                    this.RaisePropertyChanged("SkinName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeStatus {
            get {
                return this.TreeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeStatusField, value) != true)) {
                    this.TreeStatusField = value;
                    this.RaisePropertyChanged("TreeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseEmail {
            get {
                return this.UseEmailField;
            }
            set {
                if ((this.UseEmailField.Equals(value) != true)) {
                    this.UseEmailField = value;
                    this.RaisePropertyChanged("UseEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_BuildingProjects", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_BuildingProjects : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessRightValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BasedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuilderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerManagementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultAccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultSTAccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultSTTimeSlotGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultTariffScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultTimeSlotGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MWCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MWDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MWHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MWLackTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinWageAccessRelevanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PresentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintPassOnCompleteDocsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessRightValidDays {
            get {
                return this.AccessRightValidDaysField;
            }
            set {
                if ((this.AccessRightValidDaysField.Equals(value) != true)) {
                    this.AccessRightValidDaysField = value;
                    this.RaisePropertyChanged("AccessRightValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BasedOn {
            get {
                return this.BasedOnField;
            }
            set {
                if ((this.BasedOnField.Equals(value) != true)) {
                    this.BasedOnField = value;
                    this.RaisePropertyChanged("BasedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuilderName {
            get {
                return this.BuilderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuilderNameField, value) != true)) {
                    this.BuilderNameField = value;
                    this.RaisePropertyChanged("BuilderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerManagementName {
            get {
                return this.ContainerManagementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerManagementNameField, value) != true)) {
                    this.ContainerManagementNameField = value;
                    this.RaisePropertyChanged("ContainerManagementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultAccessAreaID {
            get {
                return this.DefaultAccessAreaIDField;
            }
            set {
                if ((this.DefaultAccessAreaIDField.Equals(value) != true)) {
                    this.DefaultAccessAreaIDField = value;
                    this.RaisePropertyChanged("DefaultAccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultRoleID {
            get {
                return this.DefaultRoleIDField;
            }
            set {
                if ((this.DefaultRoleIDField.Equals(value) != true)) {
                    this.DefaultRoleIDField = value;
                    this.RaisePropertyChanged("DefaultRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultSTAccessAreaID {
            get {
                return this.DefaultSTAccessAreaIDField;
            }
            set {
                if ((this.DefaultSTAccessAreaIDField.Equals(value) != true)) {
                    this.DefaultSTAccessAreaIDField = value;
                    this.RaisePropertyChanged("DefaultSTAccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultSTTimeSlotGroupID {
            get {
                return this.DefaultSTTimeSlotGroupIDField;
            }
            set {
                if ((this.DefaultSTTimeSlotGroupIDField.Equals(value) != true)) {
                    this.DefaultSTTimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("DefaultSTTimeSlotGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultTariffScope {
            get {
                return this.DefaultTariffScopeField;
            }
            set {
                if ((this.DefaultTariffScopeField.Equals(value) != true)) {
                    this.DefaultTariffScopeField = value;
                    this.RaisePropertyChanged("DefaultTariffScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultTimeSlotGroupID {
            get {
                return this.DefaultTimeSlotGroupIDField;
            }
            set {
                if ((this.DefaultTimeSlotGroupIDField.Equals(value) != true)) {
                    this.DefaultTimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("DefaultTimeSlotGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MWCheck {
            get {
                return this.MWCheckField;
            }
            set {
                if ((this.MWCheckField.Equals(value) != true)) {
                    this.MWCheckField = value;
                    this.RaisePropertyChanged("MWCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MWDeadline {
            get {
                return this.MWDeadlineField;
            }
            set {
                if ((this.MWDeadlineField.Equals(value) != true)) {
                    this.MWDeadlineField = value;
                    this.RaisePropertyChanged("MWDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MWHours {
            get {
                return this.MWHoursField;
            }
            set {
                if ((this.MWHoursField.Equals(value) != true)) {
                    this.MWHoursField = value;
                    this.RaisePropertyChanged("MWHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MWLackTrigger {
            get {
                return this.MWLackTriggerField;
            }
            set {
                if ((this.MWLackTriggerField.Equals(value) != true)) {
                    this.MWLackTriggerField = value;
                    this.RaisePropertyChanged("MWLackTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinWageAccessRelevance {
            get {
                return this.MinWageAccessRelevanceField;
            }
            set {
                if ((this.MinWageAccessRelevanceField.Equals(value) != true)) {
                    this.MinWageAccessRelevanceField = value;
                    this.RaisePropertyChanged("MinWageAccessRelevance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PresentType {
            get {
                return this.PresentTypeField;
            }
            set {
                if ((this.PresentTypeField.Equals(value) != true)) {
                    this.PresentTypeField = value;
                    this.RaisePropertyChanged("PresentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintPassOnCompleteDocs {
            get {
                return this.PrintPassOnCompleteDocsField;
            }
            set {
                if ((this.PrintPassOnCompleteDocsField.Equals(value) != true)) {
                    this.PrintPassOnCompleteDocsField = value;
                    this.RaisePropertyChanged("PrintPassOnCompleteDocs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFieldsConfig_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetFieldsConfig_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActionIsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionTranslatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DialogIsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMandatoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameTranslatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActionIsActive {
            get {
                return this.ActionIsActiveField;
            }
            set {
                if ((this.ActionIsActiveField.Equals(value) != true)) {
                    this.ActionIsActiveField = value;
                    this.RaisePropertyChanged("ActionIsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionTranslated {
            get {
                return this.DescriptionTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionTranslatedField, value) != true)) {
                    this.DescriptionTranslatedField = value;
                    this.RaisePropertyChanged("DescriptionTranslated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DialogIsActive {
            get {
                return this.DialogIsActiveField;
            }
            set {
                if ((this.DialogIsActiveField.Equals(value) != true)) {
                    this.DialogIsActiveField = value;
                    this.RaisePropertyChanged("DialogIsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalName {
            get {
                return this.InternalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalNameField, value) != true)) {
                    this.InternalNameField = value;
                    this.RaisePropertyChanged("InternalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((this.IsEditableField.Equals(value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMandatory {
            get {
                return this.IsMandatoryField;
            }
            set {
                if ((this.IsMandatoryField.Equals(value) != true)) {
                    this.IsMandatoryField = value;
                    this.RaisePropertyChanged("IsMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameTranslated {
            get {
                return this.NameTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.NameTranslatedField, value) != true)) {
                    this.NameTranslatedField = value;
                    this.RaisePropertyChanged("NameTranslated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeID {
            get {
                return this.NodeIDField;
            }
            set {
                if ((this.NodeIDField.Equals(value) != true)) {
                    this.NodeIDField = value;
                    this.RaisePropertyChanged("NodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintPass_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class PrintPass_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PassCaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PassCaseID {
            get {
                return this.PassCaseIDField;
            }
            set {
                if ((this.PassCaseIDField.Equals(value) != true)) {
                    this.PassCaseIDField = value;
                    this.RaisePropertyChanged("PassCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeRegistrationData", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class EmployeeRegistrationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CodeValidUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReturnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BpName {
            get {
                return this.BpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BpNameField, value) != true)) {
                    this.BpNameField = value;
                    this.RaisePropertyChanged("BpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CodeValidUntil {
            get {
                return this.CodeValidUntilField;
            }
            set {
                if ((this.CodeValidUntilField.Equals(value) != true)) {
                    this.CodeValidUntilField = value;
                    this.RaisePropertyChanged("CodeValidUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReturnCode {
            get {
                return this.ReturnCodeField;
            }
            set {
                if ((this.ReturnCodeField.Equals(value) != true)) {
                    this.ReturnCodeField = value;
                    this.RaisePropertyChanged("ReturnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnMessage {
            get {
                return this.ReturnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnMessageField, value) != true)) {
                    this.ReturnMessageField = value;
                    this.RaisePropertyChanged("ReturnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortTermPass", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices.Models")]
    [System.SerializableAttribute()]
    public partial class ShortTermPass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AssignedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeactivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermPassTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortTermPassTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermVisitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivatedFrom {
            get {
                return this.ActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivatedFromField, value) != true)) {
                    this.ActivatedFromField = value;
                    this.RaisePropertyChanged("ActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedFrom {
            get {
                return this.AssignedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedFromField, value) != true)) {
                    this.AssignedFromField = value;
                    this.RaisePropertyChanged("AssignedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AssignedOn {
            get {
                return this.AssignedOnField;
            }
            set {
                if ((this.AssignedOnField.Equals(value) != true)) {
                    this.AssignedOnField = value;
                    this.RaisePropertyChanged("AssignedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeactivatedFrom {
            get {
                return this.DeactivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DeactivatedFromField, value) != true)) {
                    this.DeactivatedFromField = value;
                    this.RaisePropertyChanged("DeactivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeactivatedOn {
            get {
                return this.DeactivatedOnField;
            }
            set {
                if ((this.DeactivatedOnField.Equals(value) != true)) {
                    this.DeactivatedOnField = value;
                    this.RaisePropertyChanged("DeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedFrom {
            get {
                return this.PrintedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedFromField, value) != true)) {
                    this.PrintedFromField = value;
                    this.RaisePropertyChanged("PrintedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermPassID {
            get {
                return this.ShortTermPassIDField;
            }
            set {
                if ((this.ShortTermPassIDField.Equals(value) != true)) {
                    this.ShortTermPassIDField = value;
                    this.RaisePropertyChanged("ShortTermPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermPassTypeID {
            get {
                return this.ShortTermPassTypeIDField;
            }
            set {
                if ((this.ShortTermPassTypeIDField.Equals(value) != true)) {
                    this.ShortTermPassTypeIDField = value;
                    this.RaisePropertyChanged("ShortTermPassTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortTermPassTypeName {
            get {
                return this.ShortTermPassTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortTermPassTypeNameField, value) != true)) {
                    this.ShortTermPassTypeNameField = value;
                    this.RaisePropertyChanged("ShortTermPassTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermVisitorID {
            get {
                return this.ShortTermVisitorIDField;
            }
            set {
                if ((this.ShortTermVisitorIDField.Equals(value) != true)) {
                    this.ShortTermVisitorIDField = value;
                    this.RaisePropertyChanged("ShortTermVisitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidDays {
            get {
                return this.ValidDaysField;
            }
            set {
                if ((this.ValidDaysField.Equals(value) != true)) {
                    this.ValidDaysField = value;
                    this.RaisePropertyChanged("ValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidHours {
            get {
                return this.ValidHoursField;
            }
            set {
                if ((this.ValidHoursField.Equals(value) != true)) {
                    this.ValidHoursField = value;
                    this.RaisePropertyChanged("ValidHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidMinutes {
            get {
                return this.ValidMinutesField;
            }
            set {
                if ((this.ValidMinutesField.Equals(value) != true)) {
                    this.ValidMinutesField = value;
                    this.RaisePropertyChanged("ValidMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyStatistics_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyStatistics_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeesSelfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeesTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubContractorsDirectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubContractorsTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeesSelf {
            get {
                return this.EmployeesSelfField;
            }
            set {
                if ((this.EmployeesSelfField.Equals(value) != true)) {
                    this.EmployeesSelfField = value;
                    this.RaisePropertyChanged("EmployeesSelf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeesTotal {
            get {
                return this.EmployeesTotalField;
            }
            set {
                if ((this.EmployeesTotalField.Equals(value) != true)) {
                    this.EmployeesTotalField = value;
                    this.RaisePropertyChanged("EmployeesTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubContractorsDirect {
            get {
                return this.SubContractorsDirectField;
            }
            set {
                if ((this.SubContractorsDirectField.Equals(value) != true)) {
                    this.SubContractorsDirectField = value;
                    this.RaisePropertyChanged("SubContractorsDirect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubContractorsTotal {
            get {
                return this.SubContractorsTotalField;
            }
            set {
                if ((this.SubContractorsTotalField.Equals(value) != true)) {
                    this.SubContractorsTotalField = value;
                    this.RaisePropertyChanged("SubContractorsTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployees_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployees_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessDenialReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessDenialTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessRightValidUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DenominationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuplicatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmploymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmploymentStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstCharField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxHrsPerMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseBFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseBOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseCFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseCOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbnailDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserBit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserBit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserBit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserBit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserString1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserString2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserString3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserString4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WWWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessAllowed {
            get {
                return this.AccessAllowedField;
            }
            set {
                if ((this.AccessAllowedField.Equals(value) != true)) {
                    this.AccessAllowedField = value;
                    this.RaisePropertyChanged("AccessAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessDenialReason {
            get {
                return this.AccessDenialReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessDenialReasonField, value) != true)) {
                    this.AccessDenialReasonField = value;
                    this.RaisePropertyChanged("AccessDenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessDenialTimeStamp {
            get {
                return this.AccessDenialTimeStampField;
            }
            set {
                if ((this.AccessDenialTimeStampField.Equals(value) != true)) {
                    this.AccessDenialTimeStampField = value;
                    this.RaisePropertyChanged("AccessDenialTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessRightValidUntil {
            get {
                return this.AccessRightValidUntilField;
            }
            set {
                if ((this.AccessRightValidUntilField.Equals(value) != true)) {
                    this.AccessRightValidUntilField = value;
                    this.RaisePropertyChanged("AccessRightValidUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccessTime {
            get {
                return this.AccessTimeField;
            }
            set {
                if ((this.AccessTimeField.Equals(value) != true)) {
                    this.AccessTimeField = value;
                    this.RaisePropertyChanged("AccessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeID {
            get {
                return this.AttributeIDField;
            }
            set {
                if ((this.AttributeIDField.Equals(value) != true)) {
                    this.AttributeIDField = value;
                    this.RaisePropertyChanged("AttributeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyActive {
            get {
                return this.CompanyActiveField;
            }
            set {
                if ((this.CompanyActiveField.Equals(value) != true)) {
                    this.CompanyActiveField = value;
                    this.RaisePropertyChanged("CompanyActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DenominationID {
            get {
                return this.DenominationIDField;
            }
            set {
                if ((this.DenominationIDField.Equals(value) != true)) {
                    this.DenominationIDField = value;
                    this.RaisePropertyChanged("DenominationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duplicates {
            get {
                return this.DuplicatesField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicatesField, value) != true)) {
                    this.DuplicatesField = value;
                    this.RaisePropertyChanged("Duplicates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmploymentStatus {
            get {
                return this.EmploymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentStatusField, value) != true)) {
                    this.EmploymentStatusField = value;
                    this.RaisePropertyChanged("EmploymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmploymentStatusID {
            get {
                return this.EmploymentStatusIDField;
            }
            set {
                if ((this.EmploymentStatusIDField.Equals(value) != true)) {
                    this.EmploymentStatusIDField = value;
                    this.RaisePropertyChanged("EmploymentStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalPassID {
            get {
                return this.ExternalPassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalPassIDField, value) != true)) {
                    this.ExternalPassIDField = value;
                    this.RaisePropertyChanged("ExternalPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstChar {
            get {
                return this.FirstCharField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstCharField, value) != true)) {
                    this.FirstCharField = value;
                    this.RaisePropertyChanged("FirstChar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagName {
            get {
                return this.FlagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagNameField, value) != true)) {
                    this.FlagNameField = value;
                    this.RaisePropertyChanged("FlagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullAddress {
            get {
                return this.FullAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FullAddressField, value) != true)) {
                    this.FullAddressField = value;
                    this.RaisePropertyChanged("FullAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxHrsPerMonth {
            get {
                return this.MaxHrsPerMonthField;
            }
            set {
                if ((this.MaxHrsPerMonthField.Equals(value) != true)) {
                    this.MaxHrsPerMonthField = value;
                    this.RaisePropertyChanged("MaxHrsPerMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityID {
            get {
                return this.NationalityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityIDField, value) != true)) {
                    this.NationalityIDField = value;
                    this.RaisePropertyChanged("NationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityName {
            get {
                return this.NationalityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityNameField, value) != true)) {
                    this.NationalityNameField = value;
                    this.RaisePropertyChanged("NationalityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassActive {
            get {
                return this.PassActiveField;
            }
            set {
                if ((this.PassActiveField.Equals(value) != true)) {
                    this.PassActiveField = value;
                    this.RaisePropertyChanged("PassActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassColor {
            get {
                return this.PassColorField;
            }
            set {
                if ((object.ReferenceEquals(this.PassColorField, value) != true)) {
                    this.PassColorField = value;
                    this.RaisePropertyChanged("PassColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassLocked {
            get {
                return this.PassLockedField;
            }
            set {
                if ((this.PassLockedField.Equals(value) != true)) {
                    this.PassLockedField = value;
                    this.RaisePropertyChanged("PassLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PhotoData {
            get {
                return this.PhotoDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoDataField, value) != true)) {
                    this.PhotoDataField = value;
                    this.RaisePropertyChanged("PhotoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFileName {
            get {
                return this.PhotoFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFileNameField, value) != true)) {
                    this.PhotoFileNameField = value;
                    this.RaisePropertyChanged("PhotoFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Present {
            get {
                return this.PresentField;
            }
            set {
                if ((this.PresentField.Equals(value) != true)) {
                    this.PresentField = value;
                    this.RaisePropertyChanged("Present");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseBFrom {
            get {
                return this.ReleaseBFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseBFromField, value) != true)) {
                    this.ReleaseBFromField = value;
                    this.RaisePropertyChanged("ReleaseBFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseBOn {
            get {
                return this.ReleaseBOnField;
            }
            set {
                if ((this.ReleaseBOnField.Equals(value) != true)) {
                    this.ReleaseBOnField = value;
                    this.RaisePropertyChanged("ReleaseBOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseCFrom {
            get {
                return this.ReleaseCFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseCFromField, value) != true)) {
                    this.ReleaseCFromField = value;
                    this.RaisePropertyChanged("ReleaseCFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseCOn {
            get {
                return this.ReleaseCOnField;
            }
            set {
                if ((this.ReleaseCOnField.Equals(value) != true)) {
                    this.ReleaseCOnField = value;
                    this.RaisePropertyChanged("ReleaseCOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffFunction {
            get {
                return this.StaffFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffFunctionField, value) != true)) {
                    this.StaffFunctionField = value;
                    this.RaisePropertyChanged("StaffFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ThumbnailData {
            get {
                return this.ThumbnailDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailDataField, value) != true)) {
                    this.ThumbnailDataField = value;
                    this.RaisePropertyChanged("ThumbnailData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((this.TradeIDField.Equals(value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeName {
            get {
                return this.TradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNameField, value) != true)) {
                    this.TradeNameField = value;
                    this.RaisePropertyChanged("TradeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserBit1 {
            get {
                return this.UserBit1Field;
            }
            set {
                if ((this.UserBit1Field.Equals(value) != true)) {
                    this.UserBit1Field = value;
                    this.RaisePropertyChanged("UserBit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserBit2 {
            get {
                return this.UserBit2Field;
            }
            set {
                if ((this.UserBit2Field.Equals(value) != true)) {
                    this.UserBit2Field = value;
                    this.RaisePropertyChanged("UserBit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserBit3 {
            get {
                return this.UserBit3Field;
            }
            set {
                if ((this.UserBit3Field.Equals(value) != true)) {
                    this.UserBit3Field = value;
                    this.RaisePropertyChanged("UserBit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserBit4 {
            get {
                return this.UserBit4Field;
            }
            set {
                if ((this.UserBit4Field.Equals(value) != true)) {
                    this.UserBit4Field = value;
                    this.RaisePropertyChanged("UserBit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserString1 {
            get {
                return this.UserString1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserString1Field, value) != true)) {
                    this.UserString1Field = value;
                    this.RaisePropertyChanged("UserString1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserString2 {
            get {
                return this.UserString2Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserString2Field, value) != true)) {
                    this.UserString2Field = value;
                    this.RaisePropertyChanged("UserString2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserString3 {
            get {
                return this.UserString3Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserString3Field, value) != true)) {
                    this.UserString3Field = value;
                    this.RaisePropertyChanged("UserString3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserString4 {
            get {
                return this.UserString4Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserString4Field, value) != true)) {
                    this.UserString4Field = value;
                    this.RaisePropertyChanged("UserString4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WWW {
            get {
                return this.WWWField;
            }
            set {
                if ((object.ReferenceEquals(this.WWWField, value) != true)) {
                    this.WWWField = value;
                    this.RaisePropertyChanged("WWW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data_AccessRightEvents", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Data_AccessRightEvents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessDenialReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessRightEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveredAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSubstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MessageFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MessageUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessAllowed {
            get {
                return this.AccessAllowedField;
            }
            set {
                if ((this.AccessAllowedField.Equals(value) != true)) {
                    this.AccessAllowedField = value;
                    this.RaisePropertyChanged("AccessAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessDenialReason {
            get {
                return this.AccessDenialReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessDenialReasonField, value) != true)) {
                    this.AccessDenialReasonField = value;
                    this.RaisePropertyChanged("AccessDenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessRightEventID {
            get {
                return this.AccessRightEventIDField;
            }
            set {
                if ((this.AccessRightEventIDField.Equals(value) != true)) {
                    this.AccessRightEventIDField = value;
                    this.RaisePropertyChanged("AccessRightEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveredAt {
            get {
                return this.DeliveredAtField;
            }
            set {
                if ((this.DeliveredAtField.Equals(value) != true)) {
                    this.DeliveredAtField = value;
                    this.RaisePropertyChanged("DeliveredAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryMessage {
            get {
                return this.DeliveryMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryMessageField, value) != true)) {
                    this.DeliveryMessageField = value;
                    this.RaisePropertyChanged("DeliveryMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSubstitute {
            get {
                return this.HasSubstituteField;
            }
            set {
                if ((this.HasSubstituteField.Equals(value) != true)) {
                    this.HasSubstituteField = value;
                    this.RaisePropertyChanged("HasSubstitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelivered {
            get {
                return this.IsDeliveredField;
            }
            set {
                if ((this.IsDeliveredField.Equals(value) != true)) {
                    this.IsDeliveredField = value;
                    this.RaisePropertyChanged("IsDelivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewest {
            get {
                return this.IsNewestField;
            }
            set {
                if ((this.IsNewestField.Equals(value) != true)) {
                    this.IsNewestField = value;
                    this.RaisePropertyChanged("IsNewest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MessageFrom {
            get {
                return this.MessageFromField;
            }
            set {
                if ((this.MessageFromField.Equals(value) != true)) {
                    this.MessageFromField = value;
                    this.RaisePropertyChanged("MessageFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MessageUntil {
            get {
                return this.MessageUntilField;
            }
            set {
                if ((this.MessageUntilField.Equals(value) != true)) {
                    this.MessageUntilField = value;
                    this.RaisePropertyChanged("MessageUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassType {
            get {
                return this.PassTypeField;
            }
            set {
                if ((this.PassTypeField.Equals(value) != true)) {
                    this.PassTypeField = value;
                    this.RaisePropertyChanged("PassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data_AccessAreaEvents", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Data_AccessAreaEvents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessRightEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaEventID {
            get {
                return this.AccessAreaEventIDField;
            }
            set {
                if ((this.AccessAreaEventIDField.Equals(value) != true)) {
                    this.AccessAreaEventIDField = value;
                    this.RaisePropertyChanged("AccessAreaEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessRightEventID {
            get {
                return this.AccessRightEventIDField;
            }
            set {
                if ((this.AccessRightEventIDField.Equals(value) != true)) {
                    this.AccessRightEventIDField = value;
                    this.RaisePropertyChanged("AccessRightEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeUntil {
            get {
                return this.TimeUntilField;
            }
            set {
                if ((this.TimeUntilField.Equals(value) != true)) {
                    this.TimeUntilField = value;
                    this.RaisePropertyChanged("TimeUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidDays {
            get {
                return this.ValidDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidDaysField, value) != true)) {
                    this.ValidDaysField = value;
                    this.RaisePropertyChanged("ValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeeAccessAreas_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeeAccessAreas_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessTimeRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckInCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckOutCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteAccessTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeSlotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UniqueAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessAreaName {
            get {
                return this.AccessAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaNameField, value) != true)) {
                    this.AccessAreaNameField = value;
                    this.RaisePropertyChanged("AccessAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessTimeRelevant {
            get {
                return this.AccessTimeRelevantField;
            }
            set {
                if ((this.AccessTimeRelevantField.Equals(value) != true)) {
                    this.AccessTimeRelevantField = value;
                    this.RaisePropertyChanged("AccessTimeRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckInCompelling {
            get {
                return this.CheckInCompellingField;
            }
            set {
                if ((this.CheckInCompellingField.Equals(value) != true)) {
                    this.CheckInCompellingField = value;
                    this.RaisePropertyChanged("CheckInCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckOutCompelling {
            get {
                return this.CheckOutCompellingField;
            }
            set {
                if ((this.CheckOutCompellingField.Equals(value) != true)) {
                    this.CheckOutCompellingField = value;
                    this.RaisePropertyChanged("CheckOutCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompleteAccessTimes {
            get {
                return this.CompleteAccessTimesField;
            }
            set {
                if ((this.CompleteAccessTimesField.Equals(value) != true)) {
                    this.CompleteAccessTimesField = value;
                    this.RaisePropertyChanged("CompleteAccessTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeHours {
            get {
                return this.PresentTimeHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeHoursField, value) != true)) {
                    this.PresentTimeHoursField = value;
                    this.RaisePropertyChanged("PresentTimeHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeMinutes {
            get {
                return this.PresentTimeMinutesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeMinutesField, value) != true)) {
                    this.PresentTimeMinutesField = value;
                    this.RaisePropertyChanged("PresentTimeMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeSlotName {
            get {
                return this.TimeSlotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeSlotNameField, value) != true)) {
                    this.TimeSlotNameField = value;
                    this.RaisePropertyChanged("TimeSlotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeUntil {
            get {
                return this.TimeUntilField;
            }
            set {
                if ((this.TimeUntilField.Equals(value) != true)) {
                    this.TimeUntilField = value;
                    this.RaisePropertyChanged("TimeUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UniqueAccess {
            get {
                return this.UniqueAccessField;
            }
            set {
                if ((this.UniqueAccessField.Equals(value) != true)) {
                    this.UniqueAccessField = value;
                    this.RaisePropertyChanged("UniqueAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidDays {
            get {
                return this.ValidDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidDaysField, value) != true)) {
                    this.ValidDaysField = value;
                    this.RaisePropertyChanged("ValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HasValidDocumentRelevantFor_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class HasValidDocumentRelevantFor_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccessRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RelevantForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentReceived {
            get {
                return this.DocumentReceivedField;
            }
            set {
                if ((this.DocumentReceivedField.Equals(value) != true)) {
                    this.DocumentReceivedField = value;
                    this.RaisePropertyChanged("DocumentReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessRelevant {
            get {
                return this.IsAccessRelevantField;
            }
            set {
                if ((this.IsAccessRelevantField.Equals(value) != true)) {
                    this.IsAccessRelevantField = value;
                    this.RaisePropertyChanged("IsAccessRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte RelevantFor {
            get {
                return this.RelevantForField;
            }
            set {
                if ((this.RelevantForField.Equals(value) != true)) {
                    this.RelevantForField = value;
                    this.RaisePropertyChanged("RelevantFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccessRightEvents_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetAccessRightEvents_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessDenialReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessRightEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveredAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSubstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MessageFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MessageUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessAllowed {
            get {
                return this.AccessAllowedField;
            }
            set {
                if ((this.AccessAllowedField.Equals(value) != true)) {
                    this.AccessAllowedField = value;
                    this.RaisePropertyChanged("AccessAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessDenialReason {
            get {
                return this.AccessDenialReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessDenialReasonField, value) != true)) {
                    this.AccessDenialReasonField = value;
                    this.RaisePropertyChanged("AccessDenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessRightEventID {
            get {
                return this.AccessRightEventIDField;
            }
            set {
                if ((this.AccessRightEventIDField.Equals(value) != true)) {
                    this.AccessRightEventIDField = value;
                    this.RaisePropertyChanged("AccessRightEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveredAt {
            get {
                return this.DeliveredAtField;
            }
            set {
                if ((this.DeliveredAtField.Equals(value) != true)) {
                    this.DeliveredAtField = value;
                    this.RaisePropertyChanged("DeliveredAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryMessage {
            get {
                return this.DeliveryMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryMessageField, value) != true)) {
                    this.DeliveryMessageField = value;
                    this.RaisePropertyChanged("DeliveryMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSubstitute {
            get {
                return this.HasSubstituteField;
            }
            set {
                if ((this.HasSubstituteField.Equals(value) != true)) {
                    this.HasSubstituteField = value;
                    this.RaisePropertyChanged("HasSubstitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelivered {
            get {
                return this.IsDeliveredField;
            }
            set {
                if ((this.IsDeliveredField.Equals(value) != true)) {
                    this.IsDeliveredField = value;
                    this.RaisePropertyChanged("IsDelivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewest {
            get {
                return this.IsNewestField;
            }
            set {
                if ((this.IsNewestField.Equals(value) != true)) {
                    this.IsNewestField = value;
                    this.RaisePropertyChanged("IsNewest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MessageFrom {
            get {
                return this.MessageFromField;
            }
            set {
                if ((this.MessageFromField.Equals(value) != true)) {
                    this.MessageFromField = value;
                    this.RaisePropertyChanged("MessageFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MessageUntil {
            get {
                return this.MessageUntilField;
            }
            set {
                if ((this.MessageUntilField.Equals(value) != true)) {
                    this.MessageUntilField = value;
                    this.RaisePropertyChanged("MessageUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassType {
            get {
                return this.PassTypeField;
            }
            set {
                if ((this.PassTypeField.Equals(value) != true)) {
                    this.PassTypeField = value;
                    this.RaisePropertyChanged("PassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAccessAreaEvents_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetAccessAreaEvents_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessRightEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeSlotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaEventID {
            get {
                return this.AccessAreaEventIDField;
            }
            set {
                if ((this.AccessAreaEventIDField.Equals(value) != true)) {
                    this.AccessAreaEventIDField = value;
                    this.RaisePropertyChanged("AccessAreaEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessAreaName {
            get {
                return this.AccessAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaNameField, value) != true)) {
                    this.AccessAreaNameField = value;
                    this.RaisePropertyChanged("AccessAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessRightEventID {
            get {
                return this.AccessRightEventIDField;
            }
            set {
                if ((this.AccessRightEventIDField.Equals(value) != true)) {
                    this.AccessRightEventIDField = value;
                    this.RaisePropertyChanged("AccessRightEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeSlotName {
            get {
                return this.TimeSlotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeSlotNameField, value) != true)) {
                    this.TimeSlotNameField = value;
                    this.RaisePropertyChanged("TimeSlotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeUntil {
            get {
                return this.TimeUntilField;
            }
            set {
                if ((this.TimeUntilField.Equals(value) != true)) {
                    this.TimeUntilField = value;
                    this.RaisePropertyChanged("TimeUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidDays {
            get {
                return this.ValidDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidDaysField, value) != true)) {
                    this.ValidDaysField = value;
                    this.RaisePropertyChanged("ValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRelevantDocuments_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetRelevantDocuments_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccessRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecIDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelevantDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RelevantForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SampleDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipExpirationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessRelevant {
            get {
                return this.IsAccessRelevantField;
            }
            set {
                if ((this.IsAccessRelevantField.Equals(value) != true)) {
                    this.IsAccessRelevantField = value;
                    this.RaisePropertyChanged("IsAccessRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecExpirationDate {
            get {
                return this.RecExpirationDateField;
            }
            set {
                if ((this.RecExpirationDateField.Equals(value) != true)) {
                    this.RecExpirationDateField = value;
                    this.RaisePropertyChanged("RecExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecIDNumber {
            get {
                return this.RecIDNumberField;
            }
            set {
                if ((this.RecIDNumberField.Equals(value) != true)) {
                    this.RecIDNumberField = value;
                    this.RaisePropertyChanged("RecIDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelevantDocumentID {
            get {
                return this.RelevantDocumentIDField;
            }
            set {
                if ((this.RelevantDocumentIDField.Equals(value) != true)) {
                    this.RelevantDocumentIDField = value;
                    this.RaisePropertyChanged("RelevantDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte RelevantFor {
            get {
                return this.RelevantForField;
            }
            set {
                if ((this.RelevantForField.Equals(value) != true)) {
                    this.RelevantForField = value;
                    this.RaisePropertyChanged("RelevantFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SampleData {
            get {
                return this.SampleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleDataField, value) != true)) {
                    this.SampleDataField = value;
                    this.RaisePropertyChanged("SampleData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleFileName {
            get {
                return this.SampleFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleFileNameField, value) != true)) {
                    this.SampleFileNameField = value;
                    this.RaisePropertyChanged("SampleFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTipDocumentID {
            get {
                return this.ToolTipDocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipDocumentIDField, value) != true)) {
                    this.ToolTipDocumentIDField = value;
                    this.RaisePropertyChanged("ToolTipDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTipExpiration {
            get {
                return this.ToolTipExpirationField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipExpirationField, value) != true)) {
                    this.ToolTipExpirationField = value;
                    this.RaisePropertyChanged("ToolTipExpiration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeeRelevantDocuments_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeeRelevantDocuments_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccessRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecIDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelevantDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RelevantForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SampleDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipExpirationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentReceived {
            get {
                return this.DocumentReceivedField;
            }
            set {
                if ((this.DocumentReceivedField.Equals(value) != true)) {
                    this.DocumentReceivedField = value;
                    this.RaisePropertyChanged("DocumentReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDNumber {
            get {
                return this.IDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IDNumberField, value) != true)) {
                    this.IDNumberField = value;
                    this.RaisePropertyChanged("IDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessRelevant {
            get {
                return this.IsAccessRelevantField;
            }
            set {
                if ((this.IsAccessRelevantField.Equals(value) != true)) {
                    this.IsAccessRelevantField = value;
                    this.RaisePropertyChanged("IsAccessRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecExpirationDate {
            get {
                return this.RecExpirationDateField;
            }
            set {
                if ((this.RecExpirationDateField.Equals(value) != true)) {
                    this.RecExpirationDateField = value;
                    this.RaisePropertyChanged("RecExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecIDNumber {
            get {
                return this.RecIDNumberField;
            }
            set {
                if ((this.RecIDNumberField.Equals(value) != true)) {
                    this.RecIDNumberField = value;
                    this.RaisePropertyChanged("RecIDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelevantDocumentID {
            get {
                return this.RelevantDocumentIDField;
            }
            set {
                if ((this.RelevantDocumentIDField.Equals(value) != true)) {
                    this.RelevantDocumentIDField = value;
                    this.RaisePropertyChanged("RelevantDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte RelevantFor {
            get {
                return this.RelevantForField;
            }
            set {
                if ((this.RelevantForField.Equals(value) != true)) {
                    this.RelevantForField = value;
                    this.RaisePropertyChanged("RelevantFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SampleData {
            get {
                return this.SampleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleDataField, value) != true)) {
                    this.SampleDataField = value;
                    this.RaisePropertyChanged("SampleData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTipDocumentID {
            get {
                return this.ToolTipDocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipDocumentIDField, value) != true)) {
                    this.ToolTipDocumentIDField = value;
                    this.RaisePropertyChanged("ToolTipDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTipExpiration {
            get {
                return this.ToolTipExpirationField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipExpirationField, value) != true)) {
                    this.ToolTipExpirationField = value;
                    this.RaisePropertyChanged("ToolTipExpiration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeesWithTimeSlot_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeesWithTimeSlot_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeesWithRelevantDocument_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeesWithRelevantDocument_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RelevantForField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte RelevantFor {
            get {
                return this.RelevantForField;
            }
            set {
                if ((this.RelevantForField.Equals(value) != true)) {
                    this.RelevantForField = value;
                    this.RaisePropertyChanged("RelevantFor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetShortTermPasses_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetShortTermPasses_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessAllowedUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedEmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifiedWithField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastExitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PassActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassDeactivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PassDeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassInternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassLockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PassLockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShortTermPassTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermVisitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessAllowedUntil {
            get {
                return this.AccessAllowedUntilField;
            }
            set {
                if ((this.AccessAllowedUntilField.Equals(value) != true)) {
                    this.AccessAllowedUntilField = value;
                    this.RaisePropertyChanged("AccessAllowedUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedCompanyID {
            get {
                return this.AssignedCompanyIDField;
            }
            set {
                if ((this.AssignedCompanyIDField.Equals(value) != true)) {
                    this.AssignedCompanyIDField = value;
                    this.RaisePropertyChanged("AssignedCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedEmployeeID {
            get {
                return this.AssignedEmployeeIDField;
            }
            set {
                if ((this.AssignedEmployeeIDField.Equals(value) != true)) {
                    this.AssignedEmployeeIDField = value;
                    this.RaisePropertyChanged("AssignedEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIDField, value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentifiedWith {
            get {
                return this.IdentifiedWithField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifiedWithField, value) != true)) {
                    this.IdentifiedWithField = value;
                    this.RaisePropertyChanged("IdentifiedWith");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastExit {
            get {
                return this.LastExitField;
            }
            set {
                if ((this.LastExitField.Equals(value) != true)) {
                    this.LastExitField = value;
                    this.RaisePropertyChanged("LastExit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityID {
            get {
                return this.NationalityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityIDField, value) != true)) {
                    this.NationalityIDField = value;
                    this.RaisePropertyChanged("NationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassActivatedFrom {
            get {
                return this.PassActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PassActivatedFromField, value) != true)) {
                    this.PassActivatedFromField = value;
                    this.RaisePropertyChanged("PassActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PassActivatedOn {
            get {
                return this.PassActivatedOnField;
            }
            set {
                if ((this.PassActivatedOnField.Equals(value) != true)) {
                    this.PassActivatedOnField = value;
                    this.RaisePropertyChanged("PassActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassDeactivatedFrom {
            get {
                return this.PassDeactivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PassDeactivatedFromField, value) != true)) {
                    this.PassDeactivatedFromField = value;
                    this.RaisePropertyChanged("PassDeactivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PassDeactivatedOn {
            get {
                return this.PassDeactivatedOnField;
            }
            set {
                if ((this.PassDeactivatedOnField.Equals(value) != true)) {
                    this.PassDeactivatedOnField = value;
                    this.RaisePropertyChanged("PassDeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassInternalID {
            get {
                return this.PassInternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PassInternalIDField, value) != true)) {
                    this.PassInternalIDField = value;
                    this.RaisePropertyChanged("PassInternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassLockedFrom {
            get {
                return this.PassLockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PassLockedFromField, value) != true)) {
                    this.PassLockedFromField = value;
                    this.RaisePropertyChanged("PassLockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PassLockedOn {
            get {
                return this.PassLockedOnField;
            }
            set {
                if ((this.PassLockedOnField.Equals(value) != true)) {
                    this.PassLockedOnField = value;
                    this.RaisePropertyChanged("PassLockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassStatusID {
            get {
                return this.PassStatusIDField;
            }
            set {
                if ((this.PassStatusIDField.Equals(value) != true)) {
                    this.PassStatusIDField = value;
                    this.RaisePropertyChanged("PassStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermPassID {
            get {
                return this.ShortTermPassIDField;
            }
            set {
                if ((this.ShortTermPassIDField.Equals(value) != true)) {
                    this.ShortTermPassIDField = value;
                    this.RaisePropertyChanged("ShortTermPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ShortTermPassTypeID {
            get {
                return this.ShortTermPassTypeIDField;
            }
            set {
                if ((this.ShortTermPassTypeIDField.Equals(value) != true)) {
                    this.ShortTermPassTypeIDField = value;
                    this.RaisePropertyChanged("ShortTermPassTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermVisitorID {
            get {
                return this.ShortTermVisitorIDField;
            }
            set {
                if ((this.ShortTermVisitorIDField.Equals(value) != true)) {
                    this.ShortTermVisitorIDField = value;
                    this.RaisePropertyChanged("ShortTermVisitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVisitorAccessAreas_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetVisitorAccessAreas_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessTimeRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckInCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckOutCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteAccessTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeSlotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UniqueAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessAreaName {
            get {
                return this.AccessAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaNameField, value) != true)) {
                    this.AccessAreaNameField = value;
                    this.RaisePropertyChanged("AccessAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessTimeRelevant {
            get {
                return this.AccessTimeRelevantField;
            }
            set {
                if ((this.AccessTimeRelevantField.Equals(value) != true)) {
                    this.AccessTimeRelevantField = value;
                    this.RaisePropertyChanged("AccessTimeRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckInCompelling {
            get {
                return this.CheckInCompellingField;
            }
            set {
                if ((this.CheckInCompellingField.Equals(value) != true)) {
                    this.CheckInCompellingField = value;
                    this.RaisePropertyChanged("CheckInCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckOutCompelling {
            get {
                return this.CheckOutCompellingField;
            }
            set {
                if ((this.CheckOutCompellingField.Equals(value) != true)) {
                    this.CheckOutCompellingField = value;
                    this.RaisePropertyChanged("CheckOutCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompleteAccessTimes {
            get {
                return this.CompleteAccessTimesField;
            }
            set {
                if ((this.CompleteAccessTimesField.Equals(value) != true)) {
                    this.CompleteAccessTimesField = value;
                    this.RaisePropertyChanged("CompleteAccessTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeHours {
            get {
                return this.PresentTimeHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeHoursField, value) != true)) {
                    this.PresentTimeHoursField = value;
                    this.RaisePropertyChanged("PresentTimeHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeMinutes {
            get {
                return this.PresentTimeMinutesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeMinutesField, value) != true)) {
                    this.PresentTimeMinutesField = value;
                    this.RaisePropertyChanged("PresentTimeMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeSlotName {
            get {
                return this.TimeSlotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeSlotNameField, value) != true)) {
                    this.TimeSlotNameField = value;
                    this.RaisePropertyChanged("TimeSlotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeUntil {
            get {
                return this.TimeUntilField;
            }
            set {
                if ((this.TimeUntilField.Equals(value) != true)) {
                    this.TimeUntilField = value;
                    this.RaisePropertyChanged("TimeUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UniqueAccess {
            get {
                return this.UniqueAccessField;
            }
            set {
                if ((this.UniqueAccessField.Equals(value) != true)) {
                    this.UniqueAccessField = value;
                    this.RaisePropertyChanged("UniqueAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidDays {
            get {
                return this.ValidDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidDaysField, value) != true)) {
                    this.ValidDaysField = value;
                    this.RaisePropertyChanged("ValidDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeeRelevantDocumentsToAdd_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeeRelevantDocumentsToAdd_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelevantDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SampleDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelevantDocumentID {
            get {
                return this.RelevantDocumentIDField;
            }
            set {
                if ((this.RelevantDocumentIDField.Equals(value) != true)) {
                    this.RelevantDocumentIDField = value;
                    this.RaisePropertyChanged("RelevantDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SampleData {
            get {
                return this.SampleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleDataField, value) != true)) {
                    this.SampleDataField = value;
                    this.RaisePropertyChanged("SampleData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyAdminUser_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyAdminUser_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSysAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsPwdChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkinNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoundexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot {
            get {
                return this.IsRootField;
            }
            set {
                if ((this.IsRootField.Equals(value) != true)) {
                    this.IsRootField = value;
                    this.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSysAdmin {
            get {
                return this.IsSysAdminField;
            }
            set {
                if ((this.IsSysAdminField.Equals(value) != true)) {
                    this.IsSysAdminField = value;
                    this.RaisePropertyChanged("IsSysAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsPwdChange {
            get {
                return this.NeedsPwdChangeField;
            }
            set {
                if ((this.NeedsPwdChangeField.Equals(value) != true)) {
                    this.NeedsPwdChangeField = value;
                    this.RaisePropertyChanged("NeedsPwdChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseFrom {
            get {
                return this.ReleaseFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseFromField, value) != true)) {
                    this.ReleaseFromField = value;
                    this.RaisePropertyChanged("ReleaseFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseOn {
            get {
                return this.ReleaseOnField;
            }
            set {
                if ((this.ReleaseOnField.Equals(value) != true)) {
                    this.ReleaseOnField = value;
                    this.RaisePropertyChanged("ReleaseOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestFrom {
            get {
                return this.RequestFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestFromField, value) != true)) {
                    this.RequestFromField = value;
                    this.RaisePropertyChanged("RequestFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestOn {
            get {
                return this.RequestOnField;
            }
            set {
                if ((this.RequestOnField.Equals(value) != true)) {
                    this.RequestOnField = value;
                    this.RaisePropertyChanged("RequestOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkinName {
            get {
                return this.SkinNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkinNameField, value) != true)) {
                    this.SkinNameField = value;
                    this.RaisePropertyChanged("SkinName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soundex {
            get {
                return this.SoundexField;
            }
            set {
                if ((object.ReferenceEquals(this.SoundexField, value) != true)) {
                    this.SoundexField = value;
                    this.RaisePropertyChanged("Soundex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeStatus {
            get {
                return this.TreeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeStatusField, value) != true)) {
                    this.TreeStatusField = value;
                    this.RaisePropertyChanged("TreeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseEmail {
            get {
                return this.UseEmailField;
            }
            set {
                if ((this.UseEmailField.Equals(value) != true)) {
                    this.UseEmailField = value;
                    this.RaisePropertyChanged("UseEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyAdminUserWithBP_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyAdminUserWithBP_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSysAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsPwdChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkinNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoundexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot {
            get {
                return this.IsRootField;
            }
            set {
                if ((this.IsRootField.Equals(value) != true)) {
                    this.IsRootField = value;
                    this.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSysAdmin {
            get {
                return this.IsSysAdminField;
            }
            set {
                if ((this.IsSysAdminField.Equals(value) != true)) {
                    this.IsSysAdminField = value;
                    this.RaisePropertyChanged("IsSysAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsPwdChange {
            get {
                return this.NeedsPwdChangeField;
            }
            set {
                if ((this.NeedsPwdChangeField.Equals(value) != true)) {
                    this.NeedsPwdChangeField = value;
                    this.RaisePropertyChanged("NeedsPwdChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseFrom {
            get {
                return this.ReleaseFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseFromField, value) != true)) {
                    this.ReleaseFromField = value;
                    this.RaisePropertyChanged("ReleaseFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseOn {
            get {
                return this.ReleaseOnField;
            }
            set {
                if ((this.ReleaseOnField.Equals(value) != true)) {
                    this.ReleaseOnField = value;
                    this.RaisePropertyChanged("ReleaseOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestFrom {
            get {
                return this.RequestFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestFromField, value) != true)) {
                    this.RequestFromField = value;
                    this.RaisePropertyChanged("RequestFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestOn {
            get {
                return this.RequestOnField;
            }
            set {
                if ((this.RequestOnField.Equals(value) != true)) {
                    this.RequestOnField = value;
                    this.RaisePropertyChanged("RequestOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkinName {
            get {
                return this.SkinNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkinNameField, value) != true)) {
                    this.SkinNameField = value;
                    this.RaisePropertyChanged("SkinName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soundex {
            get {
                return this.SoundexField;
            }
            set {
                if ((object.ReferenceEquals(this.SoundexField, value) != true)) {
                    this.SoundexField = value;
                    this.RaisePropertyChanged("Soundex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeStatus {
            get {
                return this.TreeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeStatusField, value) != true)) {
                    this.TreeStatusField = value;
                    this.RaisePropertyChanged("TreeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseEmail {
            get {
                return this.UseEmailField;
            }
            set {
                if ((this.UseEmailField.Equals(value) != true)) {
                    this.UseEmailField = value;
                    this.RaisePropertyChanged("UseEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLockedMainContractor_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetLockedMainContractor_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LockSubContractorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LockSubContractors {
            get {
                return this.LockSubContractorsField;
            }
            set {
                if ((this.LockSubContractorsField.Equals(value) != true)) {
                    this.LockSubContractorsField = value;
                    this.RaisePropertyChanged("LockSubContractors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSubContractors_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetSubContractors_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data_ProcessEvents", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Data_ProcessEvents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyCentralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoneFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DoneOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDExecutiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDInitiatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyCentralID {
            get {
                return this.CompanyCentralIDField;
            }
            set {
                if ((this.CompanyCentralIDField.Equals(value) != true)) {
                    this.CompanyCentralIDField = value;
                    this.RaisePropertyChanged("CompanyCentralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoneFrom {
            get {
                return this.DoneFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DoneFromField, value) != true)) {
                    this.DoneFromField = value;
                    this.RaisePropertyChanged("DoneFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DoneOn {
            get {
                return this.DoneOnField;
            }
            set {
                if ((this.DoneOnField.Equals(value) != true)) {
                    this.DoneOnField = value;
                    this.RaisePropertyChanged("DoneOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessEventID {
            get {
                return this.ProcessEventIDField;
            }
            set {
                if ((this.ProcessEventIDField.Equals(value) != true)) {
                    this.ProcessEventIDField = value;
                    this.RaisePropertyChanged("ProcessEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessUrl {
            get {
                return this.ProcessUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessUrlField, value) != true)) {
                    this.ProcessUrlField = value;
                    this.RaisePropertyChanged("ProcessUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefID {
            get {
                return this.RefIDField;
            }
            set {
                if ((this.RefIDField.Equals(value) != true)) {
                    this.RefIDField = value;
                    this.RaisePropertyChanged("RefID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserIDExecutive {
            get {
                return this.UserIDExecutiveField;
            }
            set {
                if ((this.UserIDExecutiveField.Equals(value) != true)) {
                    this.UserIDExecutiveField = value;
                    this.RaisePropertyChanged("UserIDExecutive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserIDInitiator {
            get {
                return this.UserIDInitiatorField;
            }
            set {
                if ((this.UserIDInitiatorField.Equals(value) != true)) {
                    this.UserIDInitiatorField = value;
                    this.RaisePropertyChanged("UserIDInitiator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_Roles", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_Roles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelfAndSubcontractorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowInListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SelfAndSubcontractors {
            get {
                return this.SelfAndSubcontractorsField;
            }
            set {
                if ((this.SelfAndSubcontractorsField.Equals(value) != true)) {
                    this.SelfAndSubcontractorsField = value;
                    this.RaisePropertyChanged("SelfAndSubcontractors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowInList {
            get {
                return this.ShowInListField;
            }
            set {
                if ((this.ShowInListField.Equals(value) != true)) {
                    this.ShowInListField = value;
                    this.RaisePropertyChanged("ShowInList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_AccessAreas", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_AccessAreas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessTimeRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckInCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckOutCompellingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteAccessTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentTimeMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UniqueAccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessTimeRelevant {
            get {
                return this.AccessTimeRelevantField;
            }
            set {
                if ((this.AccessTimeRelevantField.Equals(value) != true)) {
                    this.AccessTimeRelevantField = value;
                    this.RaisePropertyChanged("AccessTimeRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckInCompelling {
            get {
                return this.CheckInCompellingField;
            }
            set {
                if ((this.CheckInCompellingField.Equals(value) != true)) {
                    this.CheckInCompellingField = value;
                    this.RaisePropertyChanged("CheckInCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckOutCompelling {
            get {
                return this.CheckOutCompellingField;
            }
            set {
                if ((this.CheckOutCompellingField.Equals(value) != true)) {
                    this.CheckOutCompellingField = value;
                    this.RaisePropertyChanged("CheckOutCompelling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompleteAccessTimes {
            get {
                return this.CompleteAccessTimesField;
            }
            set {
                if ((this.CompleteAccessTimesField.Equals(value) != true)) {
                    this.CompleteAccessTimesField = value;
                    this.RaisePropertyChanged("CompleteAccessTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeHours {
            get {
                return this.PresentTimeHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeHoursField, value) != true)) {
                    this.PresentTimeHoursField = value;
                    this.RaisePropertyChanged("PresentTimeHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentTimeMinutes {
            get {
                return this.PresentTimeMinutesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentTimeMinutesField, value) != true)) {
                    this.PresentTimeMinutesField = value;
                    this.RaisePropertyChanged("PresentTimeMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UniqueAccess {
            get {
                return this.UniqueAccessField;
            }
            set {
                if ((this.UniqueAccessField.Equals(value) != true)) {
                    this.UniqueAccessField = value;
                    this.RaisePropertyChanged("UniqueAccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_TimeSlotGroups", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_TimeSlotGroups : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_EmployeeAccessAreas", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_EmployeeAccessAreas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data_ShortTermAccessAreas", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Data_ShortTermAccessAreas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermVisitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalRights {
            get {
                return this.AdditionalRightsField;
            }
            set {
                if ((this.AdditionalRightsField.Equals(value) != true)) {
                    this.AdditionalRightsField = value;
                    this.RaisePropertyChanged("AdditionalRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermVisitorID {
            get {
                return this.ShortTermVisitorIDField;
            }
            set {
                if ((this.ShortTermVisitorIDField.Equals(value) != true)) {
                    this.ShortTermVisitorIDField = value;
                    this.RaisePropertyChanged("ShortTermVisitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotGroupID {
            get {
                return this.TimeSlotGroupIDField;
            }
            set {
                if ((this.TimeSlotGroupIDField.Equals(value) != true)) {
                    this.TimeSlotGroupIDField = value;
                    this.RaisePropertyChanged("TimeSlotGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_Passes", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_Passes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BarcodeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeactivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivatedFrom {
            get {
                return this.ActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivatedFromField, value) != true)) {
                    this.ActivatedFromField = value;
                    this.RaisePropertyChanged("ActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BarcodeData {
            get {
                return this.BarcodeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BarcodeDataField, value) != true)) {
                    this.BarcodeDataField = value;
                    this.RaisePropertyChanged("BarcodeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeactivatedFrom {
            get {
                return this.DeactivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DeactivatedFromField, value) != true)) {
                    this.DeactivatedFromField = value;
                    this.RaisePropertyChanged("DeactivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeactivatedOn {
            get {
                return this.DeactivatedOnField;
            }
            set {
                if ((this.DeactivatedOnField.Equals(value) != true)) {
                    this.DeactivatedOnField = value;
                    this.RaisePropertyChanged("DeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedFrom {
            get {
                return this.PrintedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedFromField, value) != true)) {
                    this.PrintedFromField = value;
                    this.RaisePropertyChanged("PrintedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System_Variables", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class System_Variables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariablePatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariableTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatPattern {
            get {
                return this.FormatPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatPatternField, value) != true)) {
                    this.FormatPatternField = value;
                    this.RaisePropertyChanged("FormatPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariablePattern {
            get {
                return this.VariablePatternField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablePatternField, value) != true)) {
                    this.VariablePatternField = value;
                    this.RaisePropertyChanged("VariablePattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableType {
            get {
                return this.VariableTypeField;
            }
            set {
                if ((this.VariableTypeField.Equals(value) != true)) {
                    this.VariableTypeField = value;
                    this.RaisePropertyChanged("VariableType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableValue {
            get {
                return this.VariableValueField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableValueField, value) != true)) {
                    this.VariableValueField = value;
                    this.RaisePropertyChanged("VariableValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_Translations", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_Translations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionTranslatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForeignIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtmlTranslatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameTranslatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionTranslated {
            get {
                return this.DescriptionTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionTranslatedField, value) != true)) {
                    this.DescriptionTranslatedField = value;
                    this.RaisePropertyChanged("DescriptionTranslated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForeignID {
            get {
                return this.ForeignIDField;
            }
            set {
                if ((this.ForeignIDField.Equals(value) != true)) {
                    this.ForeignIDField = value;
                    this.RaisePropertyChanged("ForeignID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtmlTranslated {
            get {
                return this.HtmlTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.HtmlTranslatedField, value) != true)) {
                    this.HtmlTranslatedField = value;
                    this.RaisePropertyChanged("HtmlTranslated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameTranslated {
            get {
                return this.NameTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.NameTranslatedField, value) != true)) {
                    this.NameTranslatedField = value;
                    this.RaisePropertyChanged("NameTranslated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetShortTermVisitors_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetShortTermVisitors_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessAllowedUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedEmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeactivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifiedWithField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastExitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermVisitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessAllowedUntil {
            get {
                return this.AccessAllowedUntilField;
            }
            set {
                if ((this.AccessAllowedUntilField.Equals(value) != true)) {
                    this.AccessAllowedUntilField = value;
                    this.RaisePropertyChanged("AccessAllowedUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessTime {
            get {
                return this.AccessTimeField;
            }
            set {
                if ((this.AccessTimeField.Equals(value) != true)) {
                    this.AccessTimeField = value;
                    this.RaisePropertyChanged("AccessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivatedFrom {
            get {
                return this.ActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivatedFromField, value) != true)) {
                    this.ActivatedFromField = value;
                    this.RaisePropertyChanged("ActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedCompanyID {
            get {
                return this.AssignedCompanyIDField;
            }
            set {
                if ((this.AssignedCompanyIDField.Equals(value) != true)) {
                    this.AssignedCompanyIDField = value;
                    this.RaisePropertyChanged("AssignedCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedEmployeeID {
            get {
                return this.AssignedEmployeeIDField;
            }
            set {
                if ((this.AssignedEmployeeIDField.Equals(value) != true)) {
                    this.AssignedEmployeeIDField = value;
                    this.RaisePropertyChanged("AssignedEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeactivatedFrom {
            get {
                return this.DeactivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DeactivatedFromField, value) != true)) {
                    this.DeactivatedFromField = value;
                    this.RaisePropertyChanged("DeactivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeactivatedOn {
            get {
                return this.DeactivatedOnField;
            }
            set {
                if ((this.DeactivatedOnField.Equals(value) != true)) {
                    this.DeactivatedOnField = value;
                    this.RaisePropertyChanged("DeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIDField, value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentifiedWith {
            get {
                return this.IdentifiedWithField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifiedWithField, value) != true)) {
                    this.IdentifiedWithField = value;
                    this.RaisePropertyChanged("IdentifiedWith");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastExit {
            get {
                return this.LastExitField;
            }
            set {
                if ((this.LastExitField.Equals(value) != true)) {
                    this.LastExitField = value;
                    this.RaisePropertyChanged("LastExit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityID {
            get {
                return this.NationalityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityIDField, value) != true)) {
                    this.NationalityIDField = value;
                    this.RaisePropertyChanged("NationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Present {
            get {
                return this.PresentField;
            }
            set {
                if ((this.PresentField.Equals(value) != true)) {
                    this.PresentField = value;
                    this.RaisePropertyChanged("Present");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermPassID {
            get {
                return this.ShortTermPassIDField;
            }
            set {
                if ((this.ShortTermPassIDField.Equals(value) != true)) {
                    this.ShortTermPassIDField = value;
                    this.RaisePropertyChanged("ShortTermPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermVisitorID {
            get {
                return this.ShortTermVisitorIDField;
            }
            set {
                if ((this.ShortTermVisitorIDField.Equals(value) != true)) {
                    this.ShortTermVisitorIDField = value;
                    this.RaisePropertyChanged("ShortTermVisitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitorName {
            get {
                return this.VisitorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitorNameField, value) != true)) {
                    this.VisitorNameField = value;
                    this.RaisePropertyChanged("VisitorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System_Tables", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class System_Tables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TABLE_CATALOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TABLE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TABLE_SCHEMAField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TABLE_CATALOG {
            get {
                return this.TABLE_CATALOGField;
            }
            set {
                if ((object.ReferenceEquals(this.TABLE_CATALOGField, value) != true)) {
                    this.TABLE_CATALOGField = value;
                    this.RaisePropertyChanged("TABLE_CATALOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TABLE_NAME {
            get {
                return this.TABLE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TABLE_NAMEField, value) != true)) {
                    this.TABLE_NAMEField = value;
                    this.RaisePropertyChanged("TABLE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TABLE_SCHEMA {
            get {
                return this.TABLE_SCHEMAField;
            }
            set {
                if ((object.ReferenceEquals(this.TABLE_SCHEMAField, value) != true)) {
                    this.TABLE_SCHEMAField = value;
                    this.RaisePropertyChanged("TABLE_SCHEMA");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_Users", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSysAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsPwdChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkinNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoundexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot {
            get {
                return this.IsRootField;
            }
            set {
                if ((this.IsRootField.Equals(value) != true)) {
                    this.IsRootField = value;
                    this.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSysAdmin {
            get {
                return this.IsSysAdminField;
            }
            set {
                if ((this.IsSysAdminField.Equals(value) != true)) {
                    this.IsSysAdminField = value;
                    this.RaisePropertyChanged("IsSysAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsPwdChange {
            get {
                return this.NeedsPwdChangeField;
            }
            set {
                if ((this.NeedsPwdChangeField.Equals(value) != true)) {
                    this.NeedsPwdChangeField = value;
                    this.RaisePropertyChanged("NeedsPwdChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseFrom {
            get {
                return this.ReleaseFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseFromField, value) != true)) {
                    this.ReleaseFromField = value;
                    this.RaisePropertyChanged("ReleaseFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseOn {
            get {
                return this.ReleaseOnField;
            }
            set {
                if ((this.ReleaseOnField.Equals(value) != true)) {
                    this.ReleaseOnField = value;
                    this.RaisePropertyChanged("ReleaseOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestFrom {
            get {
                return this.RequestFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestFromField, value) != true)) {
                    this.RequestFromField = value;
                    this.RaisePropertyChanged("RequestFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestOn {
            get {
                return this.RequestOnField;
            }
            set {
                if ((this.RequestOnField.Equals(value) != true)) {
                    this.RequestOnField = value;
                    this.RaisePropertyChanged("RequestOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkinName {
            get {
                return this.SkinNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkinNameField, value) != true)) {
                    this.SkinNameField = value;
                    this.RaisePropertyChanged("SkinName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soundex {
            get {
                return this.SoundexField;
            }
            set {
                if ((object.ReferenceEquals(this.SoundexField, value) != true)) {
                    this.SoundexField = value;
                    this.RaisePropertyChanged("Soundex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeStatus {
            get {
                return this.TreeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeStatusField, value) != true)) {
                    this.TreeStatusField = value;
                    this.RaisePropertyChanged("TreeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseEmail {
            get {
                return this.UseEmailField;
            }
            set {
                if ((this.UseEmailField.Equals(value) != true)) {
                    this.UseEmailField = value;
                    this.RaisePropertyChanged("UseEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPresentPersonsCount_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPresentPersonsCount_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeesFaultyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastExitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitorFaultyCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeesCount {
            get {
                return this.EmployeesCountField;
            }
            set {
                if ((this.EmployeesCountField.Equals(value) != true)) {
                    this.EmployeesCountField = value;
                    this.RaisePropertyChanged("EmployeesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeesFaultyCount {
            get {
                return this.EmployeesFaultyCountField;
            }
            set {
                if ((this.EmployeesFaultyCountField.Equals(value) != true)) {
                    this.EmployeesFaultyCountField = value;
                    this.RaisePropertyChanged("EmployeesFaultyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastExit {
            get {
                return this.LastExitField;
            }
            set {
                if ((this.LastExitField.Equals(value) != true)) {
                    this.LastExitField = value;
                    this.RaisePropertyChanged("LastExit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitorCount {
            get {
                return this.VisitorCountField;
            }
            set {
                if ((this.VisitorCountField.Equals(value) != true)) {
                    this.VisitorCountField = value;
                    this.RaisePropertyChanged("VisitorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitorFaultyCount {
            get {
                return this.VisitorFaultyCountField;
            }
            set {
                if ((this.VisitorFaultyCountField.Equals(value) != true)) {
                    this.VisitorFaultyCountField = value;
                    this.RaisePropertyChanged("VisitorFaultyCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPassBillings_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPassBillings_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CreditForOldPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstPassCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsMainContractorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PassBudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrintCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplacementCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondPassCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WillBeChargedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivatedFrom {
            get {
                return this.ActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivatedFromField, value) != true)) {
                    this.ActivatedFromField = value;
                    this.RaisePropertyChanged("ActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveCount {
            get {
                return this.ActiveCountField;
            }
            set {
                if ((this.ActiveCountField.Equals(value) != true)) {
                    this.ActiveCountField = value;
                    this.RaisePropertyChanged("ActiveCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreditForOldPass {
            get {
                return this.CreditForOldPassField;
            }
            set {
                if ((this.CreditForOldPassField.Equals(value) != true)) {
                    this.CreditForOldPassField = value;
                    this.RaisePropertyChanged("CreditForOldPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstPassCount {
            get {
                return this.FirstPassCountField;
            }
            set {
                if ((this.FirstPassCountField.Equals(value) != true)) {
                    this.FirstPassCountField = value;
                    this.RaisePropertyChanged("FirstPassCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceTo {
            get {
                return this.InvoiceToField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceToField, value) != true)) {
                    this.InvoiceToField = value;
                    this.RaisePropertyChanged("InvoiceTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsMainContractor {
            get {
                return this.IsMainContractorField;
            }
            set {
                if ((this.IsMainContractorField.Equals(value) != true)) {
                    this.IsMainContractorField = value;
                    this.RaisePropertyChanged("IsMainContractor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockCount {
            get {
                return this.LockCountField;
            }
            set {
                if ((this.LockCountField.Equals(value) != true)) {
                    this.LockCountField = value;
                    this.RaisePropertyChanged("LockCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PassBudget {
            get {
                return this.PassBudgetField;
            }
            set {
                if ((this.PassBudgetField.Equals(value) != true)) {
                    this.PassBudgetField = value;
                    this.RaisePropertyChanged("PassBudget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrintCount {
            get {
                return this.PrintCountField;
            }
            set {
                if ((this.PrintCountField.Equals(value) != true)) {
                    this.PrintCountField = value;
                    this.RaisePropertyChanged("PrintCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedFrom {
            get {
                return this.PrintedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedFromField, value) != true)) {
                    this.PrintedFromField = value;
                    this.RaisePropertyChanged("PrintedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplacementCase {
            get {
                return this.ReplacementCaseField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacementCaseField, value) != true)) {
                    this.ReplacementCaseField = value;
                    this.RaisePropertyChanged("ReplacementCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondPassCount {
            get {
                return this.SecondPassCountField;
            }
            set {
                if ((this.SecondPassCountField.Equals(value) != true)) {
                    this.SecondPassCountField = value;
                    this.RaisePropertyChanged("SecondPassCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeLevel {
            get {
                return this.TreeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeLevelField, value) != true)) {
                    this.TreeLevelField = value;
                    this.RaisePropertyChanged("TreeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WillBeCharged {
            get {
                return this.WillBeChargedField;
            }
            set {
                if ((this.WillBeChargedField.Equals(value) != true)) {
                    this.WillBeChargedField = value;
                    this.RaisePropertyChanged("WillBeCharged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTariffData_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetTariffData_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TariffContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffContractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TariffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TariffScopeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffScopeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TariffWageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TariffWageGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffWageGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TariffWageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffWageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TariffWageValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TariffContractID {
            get {
                return this.TariffContractIDField;
            }
            set {
                if ((this.TariffContractIDField.Equals(value) != true)) {
                    this.TariffContractIDField = value;
                    this.RaisePropertyChanged("TariffContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffContractName {
            get {
                return this.TariffContractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffContractNameField, value) != true)) {
                    this.TariffContractNameField = value;
                    this.RaisePropertyChanged("TariffContractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TariffID {
            get {
                return this.TariffIDField;
            }
            set {
                if ((this.TariffIDField.Equals(value) != true)) {
                    this.TariffIDField = value;
                    this.RaisePropertyChanged("TariffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffName {
            get {
                return this.TariffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffNameField, value) != true)) {
                    this.TariffNameField = value;
                    this.RaisePropertyChanged("TariffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TariffScopeID {
            get {
                return this.TariffScopeIDField;
            }
            set {
                if ((this.TariffScopeIDField.Equals(value) != true)) {
                    this.TariffScopeIDField = value;
                    this.RaisePropertyChanged("TariffScopeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffScopeName {
            get {
                return this.TariffScopeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffScopeNameField, value) != true)) {
                    this.TariffScopeNameField = value;
                    this.RaisePropertyChanged("TariffScopeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TariffWage {
            get {
                return this.TariffWageField;
            }
            set {
                if ((this.TariffWageField.Equals(value) != true)) {
                    this.TariffWageField = value;
                    this.RaisePropertyChanged("TariffWage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TariffWageGroupID {
            get {
                return this.TariffWageGroupIDField;
            }
            set {
                if ((this.TariffWageGroupIDField.Equals(value) != true)) {
                    this.TariffWageGroupIDField = value;
                    this.RaisePropertyChanged("TariffWageGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffWageGroupName {
            get {
                return this.TariffWageGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffWageGroupNameField, value) != true)) {
                    this.TariffWageGroupNameField = value;
                    this.RaisePropertyChanged("TariffWageGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TariffWageID {
            get {
                return this.TariffWageIDField;
            }
            set {
                if ((this.TariffWageIDField.Equals(value) != true)) {
                    this.TariffWageIDField = value;
                    this.RaisePropertyChanged("TariffWageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffWageName {
            get {
                return this.TariffWageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffWageNameField, value) != true)) {
                    this.TariffWageNameField = value;
                    this.RaisePropertyChanged("TariffWageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TariffWageValidFrom {
            get {
                return this.TariffWageValidFromField;
            }
            set {
                if ((this.TariffWageValidFromField.Equals(value) != true)) {
                    this.TariffWageValidFromField = value;
                    this.RaisePropertyChanged("TariffWageValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPresenceData_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPresenceData_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessTimeManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompressLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExitAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExitTimeManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PresenceDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PresenceLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PresenceSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessAreaName {
            get {
                return this.AccessAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaNameField, value) != true)) {
                    this.AccessAreaNameField = value;
                    this.RaisePropertyChanged("AccessAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessAt {
            get {
                return this.AccessAtField;
            }
            set {
                if ((this.AccessAtField.Equals(value) != true)) {
                    this.AccessAtField = value;
                    this.RaisePropertyChanged("AccessAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessTimeManual {
            get {
                return this.AccessTimeManualField;
            }
            set {
                if ((this.AccessTimeManualField.Equals(value) != true)) {
                    this.AccessTimeManualField = value;
                    this.RaisePropertyChanged("AccessTimeManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompressLevel {
            get {
                return this.CompressLevelField;
            }
            set {
                if ((this.CompressLevelField.Equals(value) != true)) {
                    this.CompressLevelField = value;
                    this.RaisePropertyChanged("CompressLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountAs {
            get {
                return this.CountAsField;
            }
            set {
                if ((this.CountAsField.Equals(value) != true)) {
                    this.CountAsField = value;
                    this.RaisePropertyChanged("CountAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateUntil {
            get {
                return this.DateUntilField;
            }
            set {
                if ((this.DateUntilField.Equals(value) != true)) {
                    this.DateUntilField = value;
                    this.RaisePropertyChanged("DateUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExitAt {
            get {
                return this.ExitAtField;
            }
            set {
                if ((this.ExitAtField.Equals(value) != true)) {
                    this.ExitAtField = value;
                    this.RaisePropertyChanged("ExitAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExitTimeManual {
            get {
                return this.ExitTimeManualField;
            }
            set {
                if ((this.ExitTimeManualField.Equals(value) != true)) {
                    this.ExitTimeManualField = value;
                    this.RaisePropertyChanged("ExitTimeManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((this.IndentLevelField.Equals(value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PresenceDay {
            get {
                return this.PresenceDayField;
            }
            set {
                if ((this.PresenceDayField.Equals(value) != true)) {
                    this.PresenceDayField = value;
                    this.RaisePropertyChanged("PresenceDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PresenceLevel {
            get {
                return this.PresenceLevelField;
            }
            set {
                if ((this.PresenceLevelField.Equals(value) != true)) {
                    this.PresenceLevelField = value;
                    this.RaisePropertyChanged("PresenceLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PresenceSeconds {
            get {
                return this.PresenceSecondsField;
            }
            set {
                if ((this.PresenceSecondsField.Equals(value) != true)) {
                    this.PresenceSecondsField = value;
                    this.RaisePropertyChanged("PresenceSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((this.TradeIDField.Equals(value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeLevel {
            get {
                return this.TreeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeLevelField, value) != true)) {
                    this.TreeLevelField = value;
                    this.RaisePropertyChanged("TreeLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPresenceDataNow_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPresenceDataNow_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmploymentStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmploymentStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExitAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFirstAiderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PresenceDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PresenceSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessAreaName {
            get {
                return this.AccessAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaNameField, value) != true)) {
                    this.AccessAreaNameField = value;
                    this.RaisePropertyChanged("AccessAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessAt {
            get {
                return this.AccessAtField;
            }
            set {
                if ((this.AccessAtField.Equals(value) != true)) {
                    this.AccessAtField = value;
                    this.RaisePropertyChanged("AccessAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmploymentStatusID {
            get {
                return this.EmploymentStatusIDField;
            }
            set {
                if ((this.EmploymentStatusIDField.Equals(value) != true)) {
                    this.EmploymentStatusIDField = value;
                    this.RaisePropertyChanged("EmploymentStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmploymentStatusName {
            get {
                return this.EmploymentStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentStatusNameField, value) != true)) {
                    this.EmploymentStatusNameField = value;
                    this.RaisePropertyChanged("EmploymentStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExitAt {
            get {
                return this.ExitAtField;
            }
            set {
                if ((this.ExitAtField.Equals(value) != true)) {
                    this.ExitAtField = value;
                    this.RaisePropertyChanged("ExitAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((this.IndentLevelField.Equals(value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFirstAider {
            get {
                return this.IsFirstAiderField;
            }
            set {
                if ((this.IsFirstAiderField.Equals(value) != true)) {
                    this.IsFirstAiderField = value;
                    this.RaisePropertyChanged("IsFirstAider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsPresent {
            get {
                return this.IsPresentField;
            }
            set {
                if ((this.IsPresentField.Equals(value) != true)) {
                    this.IsPresentField = value;
                    this.RaisePropertyChanged("IsPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassType {
            get {
                return this.PassTypeField;
            }
            set {
                if ((this.PassTypeField.Equals(value) != true)) {
                    this.PassTypeField = value;
                    this.RaisePropertyChanged("PassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PresenceDay {
            get {
                return this.PresenceDayField;
            }
            set {
                if ((this.PresenceDayField.Equals(value) != true)) {
                    this.PresenceDayField = value;
                    this.RaisePropertyChanged("PresenceDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PresenceSeconds {
            get {
                return this.PresenceSecondsField;
            }
            set {
                if ((this.PresenceSecondsField.Equals(value) != true)) {
                    this.PresenceSecondsField = value;
                    this.RaisePropertyChanged("PresenceSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((this.TradeIDField.Equals(value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeName {
            get {
                return this.TradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNameField, value) != true)) {
                    this.TradeNameField = value;
                    this.RaisePropertyChanged("TradeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeLevel {
            get {
                return this.TreeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeLevelField, value) != true)) {
                    this.TreeLevelField = value;
                    this.RaisePropertyChanged("TreeLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTradeReportData_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetTradeReportData_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PresenceDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PresenceSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountAs {
            get {
                return this.CountAsField;
            }
            set {
                if ((this.CountAsField.Equals(value) != true)) {
                    this.CountAsField = value;
                    this.RaisePropertyChanged("CountAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((this.IndentLevelField.Equals(value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PresenceDay {
            get {
                return this.PresenceDayField;
            }
            set {
                if ((this.PresenceDayField.Equals(value) != true)) {
                    this.PresenceDayField = value;
                    this.RaisePropertyChanged("PresenceDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PresenceSeconds {
            get {
                return this.PresenceSecondsField;
            }
            set {
                if ((this.PresenceSecondsField.Equals(value) != true)) {
                    this.PresenceSecondsField = value;
                    this.RaisePropertyChanged("PresenceSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeGroupID {
            get {
                return this.TradeGroupIDField;
            }
            set {
                if ((this.TradeGroupIDField.Equals(value) != true)) {
                    this.TradeGroupIDField = value;
                    this.RaisePropertyChanged("TradeGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeGroupName {
            get {
                return this.TradeGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeGroupNameField, value) != true)) {
                    this.TradeGroupNameField = value;
                    this.RaisePropertyChanged("TradeGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((this.TradeIDField.Equals(value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeName {
            get {
                return this.TradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNameField, value) != true)) {
                    this.TradeNameField = value;
                    this.RaisePropertyChanged("TradeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeLevel {
            get {
                return this.TreeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeLevelField, value) != true)) {
                    this.TreeLevelField = value;
                    this.RaisePropertyChanged("TreeLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTemplates_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetTemplates_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_Templates", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_Templates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyTariff_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyTariff_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TariffContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffContractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TariffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TariffScopeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffScopeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyNameAdditional {
            get {
                return this.CompanyNameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameAdditionalField, value) != true)) {
                    this.CompanyNameAdditionalField = value;
                    this.RaisePropertyChanged("CompanyNameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TariffContractID {
            get {
                return this.TariffContractIDField;
            }
            set {
                if ((this.TariffContractIDField.Equals(value) != true)) {
                    this.TariffContractIDField = value;
                    this.RaisePropertyChanged("TariffContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffContractName {
            get {
                return this.TariffContractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffContractNameField, value) != true)) {
                    this.TariffContractNameField = value;
                    this.RaisePropertyChanged("TariffContractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TariffID {
            get {
                return this.TariffIDField;
            }
            set {
                if ((this.TariffIDField.Equals(value) != true)) {
                    this.TariffIDField = value;
                    this.RaisePropertyChanged("TariffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffName {
            get {
                return this.TariffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffNameField, value) != true)) {
                    this.TariffNameField = value;
                    this.RaisePropertyChanged("TariffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TariffScopeID {
            get {
                return this.TariffScopeIDField;
            }
            set {
                if ((this.TariffScopeIDField.Equals(value) != true)) {
                    this.TariffScopeIDField = value;
                    this.RaisePropertyChanged("TariffScopeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffScopeName {
            get {
                return this.TariffScopeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffScopeNameField, value) != true)) {
                    this.TariffScopeNameField = value;
                    this.RaisePropertyChanged("TariffScopeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportMinWageData_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetReportMinWageData_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCExistingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCFaultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCToLowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationMCWrongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCExistingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCFaultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCToLowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MWAttestationSCWrongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((this.IndentLevelField.Equals(value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCExisting {
            get {
                return this.MWAttestationMCExistingField;
            }
            set {
                if ((this.MWAttestationMCExistingField.Equals(value) != true)) {
                    this.MWAttestationMCExistingField = value;
                    this.RaisePropertyChanged("MWAttestationMCExisting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCFaulty {
            get {
                return this.MWAttestationMCFaultyField;
            }
            set {
                if ((this.MWAttestationMCFaultyField.Equals(value) != true)) {
                    this.MWAttestationMCFaultyField = value;
                    this.RaisePropertyChanged("MWAttestationMCFaulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCOpen {
            get {
                return this.MWAttestationMCOpenField;
            }
            set {
                if ((this.MWAttestationMCOpenField.Equals(value) != true)) {
                    this.MWAttestationMCOpenField = value;
                    this.RaisePropertyChanged("MWAttestationMCOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCRequired {
            get {
                return this.MWAttestationMCRequiredField;
            }
            set {
                if ((this.MWAttestationMCRequiredField.Equals(value) != true)) {
                    this.MWAttestationMCRequiredField = value;
                    this.RaisePropertyChanged("MWAttestationMCRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCToLow {
            get {
                return this.MWAttestationMCToLowField;
            }
            set {
                if ((this.MWAttestationMCToLowField.Equals(value) != true)) {
                    this.MWAttestationMCToLowField = value;
                    this.RaisePropertyChanged("MWAttestationMCToLow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationMCWrong {
            get {
                return this.MWAttestationMCWrongField;
            }
            set {
                if ((this.MWAttestationMCWrongField.Equals(value) != true)) {
                    this.MWAttestationMCWrongField = value;
                    this.RaisePropertyChanged("MWAttestationMCWrong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCExisting {
            get {
                return this.MWAttestationSCExistingField;
            }
            set {
                if ((this.MWAttestationSCExistingField.Equals(value) != true)) {
                    this.MWAttestationSCExistingField = value;
                    this.RaisePropertyChanged("MWAttestationSCExisting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCFaulty {
            get {
                return this.MWAttestationSCFaultyField;
            }
            set {
                if ((this.MWAttestationSCFaultyField.Equals(value) != true)) {
                    this.MWAttestationSCFaultyField = value;
                    this.RaisePropertyChanged("MWAttestationSCFaulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCOpen {
            get {
                return this.MWAttestationSCOpenField;
            }
            set {
                if ((this.MWAttestationSCOpenField.Equals(value) != true)) {
                    this.MWAttestationSCOpenField = value;
                    this.RaisePropertyChanged("MWAttestationSCOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCRequired {
            get {
                return this.MWAttestationSCRequiredField;
            }
            set {
                if ((this.MWAttestationSCRequiredField.Equals(value) != true)) {
                    this.MWAttestationSCRequiredField = value;
                    this.RaisePropertyChanged("MWAttestationSCRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCToLow {
            get {
                return this.MWAttestationSCToLowField;
            }
            set {
                if ((this.MWAttestationSCToLowField.Equals(value) != true)) {
                    this.MWAttestationSCToLowField = value;
                    this.RaisePropertyChanged("MWAttestationSCToLow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MWAttestationSCWrong {
            get {
                return this.MWAttestationSCWrongField;
            }
            set {
                if ((this.MWAttestationSCWrongField.Equals(value) != true)) {
                    this.MWAttestationSCWrongField = value;
                    this.RaisePropertyChanged("MWAttestationSCWrong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeLevel {
            get {
                return this.TreeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeLevelField, value) != true)) {
                    this.TreeLevelField = value;
                    this.RaisePropertyChanged("TreeLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyInfo_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyInfo_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlnSOKAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClientCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyCentralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinWageAccessRelevanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinWageAttestationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RiskAssessmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAssociationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlnSOKA {
            get {
                return this.BlnSOKAField;
            }
            set {
                if ((this.BlnSOKAField.Equals(value) != true)) {
                    this.BlnSOKAField = value;
                    this.RaisePropertyChanged("BlnSOKA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClientCompanyID {
            get {
                return this.ClientCompanyIDField;
            }
            set {
                if ((this.ClientCompanyIDField.Equals(value) != true)) {
                    this.ClientCompanyIDField = value;
                    this.RaisePropertyChanged("ClientCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientNameAdditional {
            get {
                return this.ClientNameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameAdditionalField, value) != true)) {
                    this.ClientNameAdditionalField = value;
                    this.RaisePropertyChanged("ClientNameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientNameVisible {
            get {
                return this.ClientNameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameVisibleField, value) != true)) {
                    this.ClientNameVisibleField = value;
                    this.RaisePropertyChanged("ClientNameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyCentralID {
            get {
                return this.CompanyCentralIDField;
            }
            set {
                if ((this.CompanyCentralIDField.Equals(value) != true)) {
                    this.CompanyCentralIDField = value;
                    this.RaisePropertyChanged("CompanyCentralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPartner {
            get {
                return this.IsPartnerField;
            }
            set {
                if ((this.IsPartnerField.Equals(value) != true)) {
                    this.IsPartnerField = value;
                    this.RaisePropertyChanged("IsPartner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinWageAccessRelevance {
            get {
                return this.MinWageAccessRelevanceField;
            }
            set {
                if ((this.MinWageAccessRelevanceField.Equals(value) != true)) {
                    this.MinWageAccessRelevanceField = value;
                    this.RaisePropertyChanged("MinWageAccessRelevance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinWageAttestation {
            get {
                return this.MinWageAttestationField;
            }
            set {
                if ((this.MinWageAttestationField.Equals(value) != true)) {
                    this.MinWageAttestationField = value;
                    this.RaisePropertyChanged("MinWageAttestation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RiskAssessment {
            get {
                return this.RiskAssessmentField;
            }
            set {
                if ((this.RiskAssessmentField.Equals(value) != true)) {
                    this.RiskAssessmentField = value;
                    this.RaisePropertyChanged("RiskAssessment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAssociation {
            get {
                return this.TradeAssociationField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAssociationField, value) != true)) {
                    this.TradeAssociationField = value;
                    this.RaisePropertyChanged("TradeAssociation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMWAttestationRequests_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetMWAttestationRequests_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MWMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MWMonth {
            get {
                return this.MWMonthField;
            }
            set {
                if ((this.MWMonthField.Equals(value) != true)) {
                    this.MWMonthField = value;
                    this.RaisePropertyChanged("MWMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((this.RequestIDField.Equals(value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System_Dialogs", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class System_Dialogs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TranslationOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseFieldRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseReportingServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageName {
            get {
                return this.PageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PageNameField, value) != true)) {
                    this.PageNameField = value;
                    this.RaisePropertyChanged("PageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TranslationOnly {
            get {
                return this.TranslationOnlyField;
            }
            set {
                if ((this.TranslationOnlyField.Equals(value) != true)) {
                    this.TranslationOnlyField = value;
                    this.RaisePropertyChanged("TranslationOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseFieldRights {
            get {
                return this.UseFieldRightsField;
            }
            set {
                if ((this.UseFieldRightsField.Equals(value) != true)) {
                    this.UseFieldRightsField = value;
                    this.RaisePropertyChanged("UseFieldRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseReportingServer {
            get {
                return this.UseReportingServerField;
            }
            set {
                if ((this.UseReportingServerField.Equals(value) != true)) {
                    this.UseReportingServerField = value;
                    this.RaisePropertyChanged("UseReportingServer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pass", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices.Models")]
    [System.SerializableAttribute()]
    public partial class Pass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeactivatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivatedFrom {
            get {
                return this.ActivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivatedFromField, value) != true)) {
                    this.ActivatedFromField = value;
                    this.RaisePropertyChanged("ActivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeactivatedFrom {
            get {
                return this.DeactivatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DeactivatedFromField, value) != true)) {
                    this.DeactivatedFromField = value;
                    this.RaisePropertyChanged("DeactivatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeactivatedOn {
            get {
                return this.DeactivatedOnField;
            }
            set {
                if ((this.DeactivatedOnField.Equals(value) != true)) {
                    this.DeactivatedOnField = value;
                    this.RaisePropertyChanged("DeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedFrom {
            get {
                return this.PrintedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedFromField, value) != true)) {
                    this.PrintedFromField = value;
                    this.RaisePropertyChanged("PrintedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortTermPassPrint", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices.Models")]
    [System.SerializableAttribute()]
    public partial class ShortTermPassPrint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrintIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrintID {
            get {
                return this.PrintIDField;
            }
            set {
                if ((this.PrintIDField.Equals(value) != true)) {
                    this.PrintIDField = value;
                    this.RaisePropertyChanged("PrintID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedFrom {
            get {
                return this.PrintedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedFromField, value) != true)) {
                    this.PrintedFromField = value;
                    this.RaisePropertyChanged("PrintedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPresentPersonsPerAccessArea_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPresentPersonsPerAccessArea_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeesPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VisitorsPresentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeesPresent {
            get {
                return this.EmployeesPresentField;
            }
            set {
                if ((this.EmployeesPresentField.Equals(value) != true)) {
                    this.EmployeesPresentField = value;
                    this.RaisePropertyChanged("EmployeesPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VisitorsPresent {
            get {
                return this.VisitorsPresentField;
            }
            set {
                if ((this.VisitorsPresentField.Equals(value) != true)) {
                    this.VisitorsPresentField = value;
                    this.RaisePropertyChanged("VisitorsPresent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMissingFirstAiders_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetMissingFirstAiders_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeesPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FirstAidersPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinAidersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeesPresent {
            get {
                return this.EmployeesPresentField;
            }
            set {
                if ((this.EmployeesPresentField.Equals(value) != true)) {
                    this.EmployeesPresentField = value;
                    this.RaisePropertyChanged("EmployeesPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FirstAidersPresent {
            get {
                return this.FirstAidersPresentField;
            }
            set {
                if ((this.FirstAidersPresentField.Equals(value) != true)) {
                    this.FirstAidersPresentField = value;
                    this.RaisePropertyChanged("FirstAidersPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinAiders {
            get {
                return this.MinAidersField;
            }
            set {
                if ((this.MinAidersField.Equals(value) != true)) {
                    this.MinAidersField = value;
                    this.RaisePropertyChanged("MinAiders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_AccessSystems", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_AccessSystems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllTerminalsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompressStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAdditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastCompressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastGetAccessEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastGetAccessRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastOfflineStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdateAccessRightsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessSystemID {
            get {
                return this.AccessSystemIDField;
            }
            set {
                if ((this.AccessSystemIDField.Equals(value) != true)) {
                    this.AccessSystemIDField = value;
                    this.RaisePropertyChanged("AccessSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllTerminalsOnline {
            get {
                return this.AllTerminalsOnlineField;
            }
            set {
                if ((this.AllTerminalsOnlineField.Equals(value) != true)) {
                    this.AllTerminalsOnlineField = value;
                    this.RaisePropertyChanged("AllTerminalsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompressStartTime {
            get {
                return this.CompressStartTimeField;
            }
            set {
                if ((this.CompressStartTimeField.Equals(value) != true)) {
                    this.CompressStartTimeField = value;
                    this.RaisePropertyChanged("CompressStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAddition {
            get {
                return this.LastAdditionField;
            }
            set {
                if ((this.LastAdditionField.Equals(value) != true)) {
                    this.LastAdditionField = value;
                    this.RaisePropertyChanged("LastAddition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastCompress {
            get {
                return this.LastCompressField;
            }
            set {
                if ((this.LastCompressField.Equals(value) != true)) {
                    this.LastCompressField = value;
                    this.RaisePropertyChanged("LastCompress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastGetAccessEvents {
            get {
                return this.LastGetAccessEventsField;
            }
            set {
                if ((this.LastGetAccessEventsField.Equals(value) != true)) {
                    this.LastGetAccessEventsField = value;
                    this.RaisePropertyChanged("LastGetAccessEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastGetAccessRights {
            get {
                return this.LastGetAccessRightsField;
            }
            set {
                if ((this.LastGetAccessRightsField.Equals(value) != true)) {
                    this.LastGetAccessRightsField = value;
                    this.RaisePropertyChanged("LastGetAccessRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastOfflineState {
            get {
                return this.LastOfflineStateField;
            }
            set {
                if ((this.LastOfflineStateField.Equals(value) != true)) {
                    this.LastOfflineStateField = value;
                    this.RaisePropertyChanged("LastOfflineState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdateAccessRights {
            get {
                return this.LastUpdateAccessRightsField;
            }
            set {
                if ((this.LastUpdateAccessRightsField.Equals(value) != true)) {
                    this.LastUpdateAccessRightsField = value;
                    this.RaisePropertyChanged("LastUpdateAccessRights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPassInfo_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPassInfo_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssignedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeactivatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivatedOn {
            get {
                return this.ActivatedOnField;
            }
            set {
                if ((this.ActivatedOnField.Equals(value) != true)) {
                    this.ActivatedOnField = value;
                    this.RaisePropertyChanged("ActivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedOn {
            get {
                return this.AssignedOnField;
            }
            set {
                if ((this.AssignedOnField.Equals(value) != true)) {
                    this.AssignedOnField = value;
                    this.RaisePropertyChanged("AssignedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeactivatedOn {
            get {
                return this.DeactivatedOnField;
            }
            set {
                if ((this.DeactivatedOnField.Equals(value) != true)) {
                    this.DeactivatedOnField = value;
                    this.RaisePropertyChanged("DeactivatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDuplicate {
            get {
                return this.IsDuplicateField;
            }
            set {
                if ((this.IsDuplicateField.Equals(value) != true)) {
                    this.IsDuplicateField = value;
                    this.RaisePropertyChanged("IsDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PassID {
            get {
                return this.PassIDField;
            }
            set {
                if ((this.PassIDField.Equals(value) != true)) {
                    this.PassIDField = value;
                    this.RaisePropertyChanged("PassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PassType {
            get {
                return this.PassTypeField;
            }
            set {
                if ((this.PassTypeField.Equals(value) != true)) {
                    this.PassTypeField = value;
                    this.RaisePropertyChanged("PassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintedOn {
            get {
                return this.PrintedOnField;
            }
            set {
                if ((this.PrintedOnField.Equals(value) != true)) {
                    this.PrintedOnField = value;
                    this.RaisePropertyChanged("PrintedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master_CompanyContacts", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Master_CompanyContacts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMWRelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionShort {
            get {
                return this.DescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionShortField, value) != true)) {
                    this.DescriptionShortField = value;
                    this.RaisePropertyChanged("DescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMWRelevant {
            get {
                return this.IsMWRelevantField;
            }
            set {
                if ((this.IsMWRelevantField.Equals(value) != true)) {
                    this.IsMWRelevantField = value;
                    this.RaisePropertyChanged("IsMWRelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices.Models")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System_Help", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class System_Help : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DialogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DialogID {
            get {
                return this.DialogIDField;
            }
            set {
                if ((this.DialogIDField.Equals(value) != true)) {
                    this.DialogIDField = value;
                    this.RaisePropertyChanged("DialogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpUrl {
            get {
                return this.HelpUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpUrlField, value) != true)) {
                    this.HelpUrlField = value;
                    this.RaisePropertyChanged("HelpUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIDField, value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetExpiringTariffs_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetExpiringTariffs_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TariffContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffContractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TariffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TariffContractID {
            get {
                return this.TariffContractIDField;
            }
            set {
                if ((this.TariffContractIDField.Equals(value) != true)) {
                    this.TariffContractIDField = value;
                    this.RaisePropertyChanged("TariffContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffContractName {
            get {
                return this.TariffContractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffContractNameField, value) != true)) {
                    this.TariffContractNameField = value;
                    this.RaisePropertyChanged("TariffContractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TariffID {
            get {
                return this.TariffIDField;
            }
            set {
                if ((this.TariffIDField.Equals(value) != true)) {
                    this.TariffIDField = value;
                    this.RaisePropertyChanged("TariffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffName {
            get {
                return this.TariffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffNameField, value) != true)) {
                    this.TariffNameField = value;
                    this.RaisePropertyChanged("TariffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmployeeDuplicates_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetEmployeeDuplicates_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Match {
            get {
                return this.MatchField;
            }
            set {
                if ((this.MatchField.Equals(value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCompanyCentralDuplicates_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetCompanyCentralDuplicates_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserDuplicates_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetUserDuplicates_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Match {
            get {
                return this.MatchField;
            }
            set {
                if ((this.MatchField.Equals(value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System_Companies", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class System_Companies : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlnSOKAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinWageAttestationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAdditionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoundexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAssociationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlnSOKA {
            get {
                return this.BlnSOKAField;
            }
            set {
                if ((this.BlnSOKAField.Equals(value) != true)) {
                    this.BlnSOKAField = value;
                    this.RaisePropertyChanged("BlnSOKA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedFrom {
            get {
                return this.LockedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedFromField, value) != true)) {
                    this.LockedFromField = value;
                    this.RaisePropertyChanged("LockedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedOn {
            get {
                return this.LockedOnField;
            }
            set {
                if ((this.LockedOnField.Equals(value) != true)) {
                    this.LockedOnField = value;
                    this.RaisePropertyChanged("LockedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinWageAttestation {
            get {
                return this.MinWageAttestationField;
            }
            set {
                if ((this.MinWageAttestationField.Equals(value) != true)) {
                    this.MinWageAttestationField = value;
                    this.RaisePropertyChanged("MinWageAttestation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAdditional {
            get {
                return this.NameAdditionalField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAdditionalField, value) != true)) {
                    this.NameAdditionalField = value;
                    this.RaisePropertyChanged("NameAdditional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameVisible {
            get {
                return this.NameVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVisibleField, value) != true)) {
                    this.NameVisibleField = value;
                    this.RaisePropertyChanged("NameVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseFrom {
            get {
                return this.ReleaseFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseFromField, value) != true)) {
                    this.ReleaseFromField = value;
                    this.RaisePropertyChanged("ReleaseFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseOn {
            get {
                return this.ReleaseOnField;
            }
            set {
                if ((this.ReleaseOnField.Equals(value) != true)) {
                    this.ReleaseOnField = value;
                    this.RaisePropertyChanged("ReleaseOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestFrom {
            get {
                return this.RequestFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestFromField, value) != true)) {
                    this.RequestFromField = value;
                    this.RaisePropertyChanged("RequestFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestOn {
            get {
                return this.RequestOnField;
            }
            set {
                if ((this.RequestOnField.Equals(value) != true)) {
                    this.RequestOnField = value;
                    this.RaisePropertyChanged("RequestOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soundex {
            get {
                return this.SoundexField;
            }
            set {
                if ((object.ReferenceEquals(this.SoundexField, value) != true)) {
                    this.SoundexField = value;
                    this.RaisePropertyChanged("Soundex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAssociation {
            get {
                return this.TradeAssociationField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAssociationField, value) != true)) {
                    this.TradeAssociationField = value;
                    this.RaisePropertyChanged("TradeAssociation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPresentFirstAiders_Result", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class GetPresentFirstAiders_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessArea {
            get {
                return this.AccessAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaField, value) != true)) {
                    this.AccessAreaField = value;
                    this.RaisePropertyChanged("AccessArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data_AccessEvents", Namespace="http://schemas.datacontract.org/2004/07/InsiteServices")]
    [System.SerializableAttribute()]
    public partial class Data_AccessEvents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccessEventLinkedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddedBySystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BfIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CorrectedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountItField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DenialReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManualEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineAccessEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MaxPresentTimeExcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageShownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresentOvernightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessAreaID {
            get {
                return this.AccessAreaIDField;
            }
            set {
                if ((this.AccessAreaIDField.Equals(value) != true)) {
                    this.AccessAreaIDField = value;
                    this.RaisePropertyChanged("AccessAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessEventID {
            get {
                return this.AccessEventIDField;
            }
            set {
                if ((this.AccessEventIDField.Equals(value) != true)) {
                    this.AccessEventIDField = value;
                    this.RaisePropertyChanged("AccessEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccessEventLinkedID {
            get {
                return this.AccessEventLinkedIDField;
            }
            set {
                if ((this.AccessEventLinkedIDField.Equals(value) != true)) {
                    this.AccessEventLinkedIDField = value;
                    this.RaisePropertyChanged("AccessEventLinkedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessOn {
            get {
                return this.AccessOnField;
            }
            set {
                if ((this.AccessOnField.Equals(value) != true)) {
                    this.AccessOnField = value;
                    this.RaisePropertyChanged("AccessOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessResult {
            get {
                return this.AccessResultField;
            }
            set {
                if ((this.AccessResultField.Equals(value) != true)) {
                    this.AccessResultField = value;
                    this.RaisePropertyChanged("AccessResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessType {
            get {
                return this.AccessTypeField;
            }
            set {
                if ((this.AccessTypeField.Equals(value) != true)) {
                    this.AccessTypeField = value;
                    this.RaisePropertyChanged("AccessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddedBySystem {
            get {
                return this.AddedBySystemField;
            }
            set {
                if ((this.AddedBySystemField.Equals(value) != true)) {
                    this.AddedBySystemField = value;
                    this.RaisePropertyChanged("AddedBySystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BfID {
            get {
                return this.BfIDField;
            }
            set {
                if ((this.BfIDField.Equals(value) != true)) {
                    this.BfIDField = value;
                    this.RaisePropertyChanged("BfID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BpID {
            get {
                return this.BpIDField;
            }
            set {
                if ((this.BpIDField.Equals(value) != true)) {
                    this.BpIDField = value;
                    this.RaisePropertyChanged("BpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CorrectedOn {
            get {
                return this.CorrectedOnField;
            }
            set {
                if ((this.CorrectedOnField.Equals(value) != true)) {
                    this.CorrectedOnField = value;
                    this.RaisePropertyChanged("CorrectedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountIt {
            get {
                return this.CountItField;
            }
            set {
                if ((this.CountItField.Equals(value) != true)) {
                    this.CountItField = value;
                    this.RaisePropertyChanged("CountIt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFrom {
            get {
                return this.CreatedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFromField, value) != true)) {
                    this.CreatedFromField = value;
                    this.RaisePropertyChanged("CreatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DenialReason {
            get {
                return this.DenialReasonField;
            }
            set {
                if ((this.DenialReasonField.Equals(value) != true)) {
                    this.DenialReasonField = value;
                    this.RaisePropertyChanged("DenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditFrom {
            get {
                return this.EditFromField;
            }
            set {
                if ((object.ReferenceEquals(this.EditFromField, value) != true)) {
                    this.EditFromField = value;
                    this.RaisePropertyChanged("EditFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditOn {
            get {
                return this.EditOnField;
            }
            set {
                if ((this.EditOnField.Equals(value) != true)) {
                    this.EditOnField = value;
                    this.RaisePropertyChanged("EditOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryID {
            get {
                return this.EntryIDField;
            }
            set {
                if ((this.EntryIDField.Equals(value) != true)) {
                    this.EntryIDField = value;
                    this.RaisePropertyChanged("EntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalIDField, value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManualEntry {
            get {
                return this.IsManualEntryField;
            }
            set {
                if ((this.IsManualEntryField.Equals(value) != true)) {
                    this.IsManualEntryField = value;
                    this.RaisePropertyChanged("IsManualEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnlineAccessEvent {
            get {
                return this.IsOnlineAccessEventField;
            }
            set {
                if ((this.IsOnlineAccessEventField.Equals(value) != true)) {
                    this.IsOnlineAccessEventField = value;
                    this.RaisePropertyChanged("IsOnlineAccessEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MaxPresentTimeExc {
            get {
                return this.MaxPresentTimeExcField;
            }
            set {
                if ((this.MaxPresentTimeExcField.Equals(value) != true)) {
                    this.MaxPresentTimeExcField = value;
                    this.RaisePropertyChanged("MaxPresentTimeExc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageShown {
            get {
                return this.MessageShownField;
            }
            set {
                if ((this.MessageShownField.Equals(value) != true)) {
                    this.MessageShownField = value;
                    this.RaisePropertyChanged("MessageShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassType {
            get {
                return this.PassTypeField;
            }
            set {
                if ((this.PassTypeField.Equals(value) != true)) {
                    this.PassTypeField = value;
                    this.RaisePropertyChanged("PassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoeID {
            get {
                return this.PoeIDField;
            }
            set {
                if ((this.PoeIDField.Equals(value) != true)) {
                    this.PoeIDField = value;
                    this.RaisePropertyChanged("PoeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PresentOvernight {
            get {
                return this.PresentOvernightField;
            }
            set {
                if ((this.PresentOvernightField.Equals(value) != true)) {
                    this.PresentOvernightField = value;
                    this.RaisePropertyChanged("PresentOvernight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServices.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        InSite.App.UserServices.UserAssignments[] Login(string userName, string passWord, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments[]> LoginAsync(string userName, string passWord, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        int UpdateUser(string columnName, string columnValue, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(string columnName, string columnValue, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePwd", ReplyAction="http://tempuri.org/IUserService/UpdatePwdResponse")]
        int UpdatePwd(string oldPwd, string newPwd, int userID, string sessionID, string userName, bool ignore, bool needsPwdChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePwd", ReplyAction="http://tempuri.org/IUserService/UpdatePwdResponse")]
        System.Threading.Tasks.Task<int> UpdatePwdAsync(string oldPwd, string newPwd, int userID, string sessionID, string userName, bool ignore, bool needsPwdChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpInfo", ReplyAction="http://tempuri.org/IUserService/GetBpInfoResponse")]
        InSite.App.UserServices.Master_BuildingProjects GetBpInfo(int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpInfo", ReplyAction="http://tempuri.org/IUserService/GetBpInfoResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_BuildingProjects> GetBpInfoAsync(int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllBpsInfo", ReplyAction="http://tempuri.org/IUserService/GetAllBpsInfoResponse")]
        InSite.App.UserServices.Master_BuildingProjects[] GetAllBpsInfo(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllBpsInfo", ReplyAction="http://tempuri.org/IUserService/GetAllBpsInfoResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_BuildingProjects[]> GetAllBpsInfoAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFieldsConfig", ReplyAction="http://tempuri.org/IUserService/GetFieldsConfigResponse")]
        InSite.App.UserServices.GetFieldsConfig_Result[] GetFieldsConfig(int systemID, int bpID, int roleID, int dialogID, int actionID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFieldsConfig", ReplyAction="http://tempuri.org/IUserService/GetFieldsConfigResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetFieldsConfig_Result[]> GetFieldsConfigAsync(int systemID, int bpID, int roleID, int dialogID, int actionID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/PrintPass", ReplyAction="http://tempuri.org/IUserService/PrintPassResponse")]
        InSite.App.UserServices.PrintPass_Result PrintPass(int systemID, int bpID, int employeeID, int replacementPassCaseID, string reason, string userName, string deactivationMessage, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/PrintPass", ReplyAction="http://tempuri.org/IUserService/PrintPassResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.PrintPass_Result> PrintPassAsync(int systemID, int bpID, int employeeID, int replacementPassCaseID, string reason, string userName, string deactivationMessage, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ActivatePass", ReplyAction="http://tempuri.org/IUserService/ActivatePassResponse")]
        int ActivatePass(int systemID, int bpID, int employeeID, string internalID, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ActivatePass", ReplyAction="http://tempuri.org/IUserService/ActivatePassResponse")]
        System.Threading.Tasks.Task<int> ActivatePassAsync(int systemID, int bpID, int employeeID, string internalID, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeactivatePass", ReplyAction="http://tempuri.org/IUserService/DeactivatePassResponse")]
        int DeactivatePass(int systemID, int bpID, int employeeID, string internalID, string reason, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeactivatePass", ReplyAction="http://tempuri.org/IUserService/DeactivatePassResponse")]
        System.Threading.Tasks.Task<int> DeactivatePassAsync(int systemID, int bpID, int employeeID, string internalID, string reason, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LockPass", ReplyAction="http://tempuri.org/IUserService/LockPassResponse")]
        int LockPass(int systemID, int bpID, int employeeID, string reason, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LockPass", ReplyAction="http://tempuri.org/IUserService/LockPassResponse")]
        System.Threading.Tasks.Task<int> LockPassAsync(int systemID, int bpID, int employeeID, string reason, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsFirstPass", ReplyAction="http://tempuri.org/IUserService/IsFirstPassResponse")]
        bool IsFirstPass(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsFirstPass", ReplyAction="http://tempuri.org/IUserService/IsFirstPassResponse")]
        System.Threading.Tasks.Task<bool> IsFirstPassAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateRegistrationCode", ReplyAction="http://tempuri.org/IUserService/ValidateRegistrationCodeResponse")]
        InSite.App.UserServices.EmployeeRegistrationData ValidateRegistrationCode(string code, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateRegistrationCode", ReplyAction="http://tempuri.org/IUserService/ValidateRegistrationCodeResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.EmployeeRegistrationData> ValidateRegistrationCodeAsync(string code, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginNameIsUnique", ReplyAction="http://tempuri.org/IUserService/LoginNameIsUniqueResponse")]
        bool LoginNameIsUnique(string loginName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginNameIsUnique", ReplyAction="http://tempuri.org/IUserService/LoginNameIsUniqueResponse")]
        System.Threading.Tasks.Task<bool> LoginNameIsUniqueAsync(string loginName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersWithRole", ReplyAction="http://tempuri.org/IUserService/GetUsersWithRoleResponse")]
        InSite.App.UserServices.UserAssignments[] GetUsersWithRole(int systemID, int bpID, int typeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersWithRole", ReplyAction="http://tempuri.org/IUserService/GetUsersWithRoleResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments[]> GetUsersWithRoleAsync(int systemID, int bpID, int typeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAppliedRule", ReplyAction="http://tempuri.org/IUserService/GetAppliedRuleResponse")]
        int GetAppliedRule(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAppliedRule", ReplyAction="http://tempuri.org/IUserService/GetAppliedRuleResponse")]
        System.Threading.Tasks.Task<int> GetAppliedRuleAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserWithLoginName", ReplyAction="http://tempuri.org/IUserService/GetUserWithLoginNameResponse")]
        InSite.App.UserServices.UserAssignments GetUserWithLoginName(string loginName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserWithLoginName", ReplyAction="http://tempuri.org/IUserService/GetUserWithLoginNameResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments> GetUserWithLoginNameAsync(string loginName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetNextID", ReplyAction="http://tempuri.org/IUserService/GetNextIDResponse")]
        int GetNextID(int systemID, string idName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetNextID", ReplyAction="http://tempuri.org/IUserService/GetNextIDResponse")]
        System.Threading.Tasks.Task<int> GetNextIDAsync(int systemID, string idName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/PrintShortTermPasses", ReplyAction="http://tempuri.org/IUserService/PrintShortTermPassesResponse")]
        int PrintShortTermPasses(int systemID, int bpID, int shortTermPassTypeID, int passCount, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/PrintShortTermPasses", ReplyAction="http://tempuri.org/IUserService/PrintShortTermPassesResponse")]
        System.Threading.Tasks.Task<int> PrintShortTermPassesAsync(int systemID, int bpID, int shortTermPassTypeID, int passCount, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateShortTermPass", ReplyAction="http://tempuri.org/IUserService/UpdateShortTermPassResponse")]
        int UpdateShortTermPass(int systemID, int bpID, int shortTermPassID, string internalID, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateShortTermPass", ReplyAction="http://tempuri.org/IUserService/UpdateShortTermPassResponse")]
        System.Threading.Tasks.Task<int> UpdateShortTermPassAsync(int systemID, int bpID, int shortTermPassID, string internalID, string userName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPass", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassResponse")]
        InSite.App.UserServices.ShortTermPass GetShortTermPass(int systemID, int bpID, string internalID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPass", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.ShortTermPass> GetShortTermPassAsync(int systemID, int bpID, string internalID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTreeNodeID", ReplyAction="http://tempuri.org/IUserService/GetTreeNodeIDResponse")]
        int GetTreeNodeID(int systemID, string dialogName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTreeNodeID", ReplyAction="http://tempuri.org/IUserService/GetTreeNodeIDResponse")]
        System.Threading.Tasks.Task<int> GetTreeNodeIDAsync(int systemID, string dialogName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialogID", ReplyAction="http://tempuri.org/IUserService/GetDialogIDResponse")]
        int GetDialogID(int systemID, string dialogName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialogID", ReplyAction="http://tempuri.org/IUserService/GetDialogIDResponse")]
        System.Threading.Tasks.Task<int> GetDialogIDAsync(int systemID, string dialogName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RowCount", ReplyAction="http://tempuri.org/IUserService/RowCountResponse")]
        int RowCount(string tableName, System.Tuple<string, int>[] whereInt, System.Tuple<string, string>[] whereString, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RowCount", ReplyAction="http://tempuri.org/IUserService/RowCountResponse")]
        System.Threading.Tasks.Task<int> RowCountAsync(string tableName, System.Tuple<string, int>[] whereInt, System.Tuple<string, string>[] whereString, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyStatistics", ReplyAction="http://tempuri.org/IUserService/GetCompanyStatisticsResponse")]
        InSite.App.UserServices.GetCompanyStatistics_Result GetCompanyStatistics(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyStatistics", ReplyAction="http://tempuri.org/IUserService/GetCompanyStatisticsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyStatistics_Result> GetCompanyStatisticsAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployees", ReplyAction="http://tempuri.org/IUserService/GetEmployeesResponse")]
        InSite.App.UserServices.GetEmployees_Result[] GetEmployees(int systemID, int bpID, int companyCentralID, int companyID, int employeeID, string externalPassID, int employmentStatusID, int tradeID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployees", ReplyAction="http://tempuri.org/IUserService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployees_Result[]> GetEmployeesAsync(int systemID, int bpID, int companyCentralID, int companyID, int employeeID, string externalPassID, int employmentStatusID, int tradeID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAccessRightEvent", ReplyAction="http://tempuri.org/IUserService/CreateAccessRightEventResponse")]
        void CreateAccessRightEvent(InSite.App.UserServices.Data_AccessRightEvents rightEvent, InSite.App.UserServices.Data_AccessAreaEvents[] areaEvents, string deactivationMessage, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateAccessRightEvent", ReplyAction="http://tempuri.org/IUserService/CreateAccessRightEventResponse")]
        System.Threading.Tasks.Task CreateAccessRightEventAsync(InSite.App.UserServices.Data_AccessRightEvents rightEvent, InSite.App.UserServices.Data_AccessAreaEvents[] areaEvents, string deactivationMessage, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetEmployeeAccessAreasResponse")]
        InSite.App.UserServices.GetEmployeeAccessAreas_Result[] GetEmployeeAccessAreas(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetEmployeeAccessAreasResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeAccessAreas_Result[]> GetEmployeeAccessAreasAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/HasValidDocumentRelevantFor", ReplyAction="http://tempuri.org/IUserService/HasValidDocumentRelevantForResponse")]
        InSite.App.UserServices.HasValidDocumentRelevantFor_Result[] HasValidDocumentRelevantFor(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/HasValidDocumentRelevantFor", ReplyAction="http://tempuri.org/IUserService/HasValidDocumentRelevantForResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.HasValidDocumentRelevantFor_Result[]> HasValidDocumentRelevantForAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessRightEvents", ReplyAction="http://tempuri.org/IUserService/GetAccessRightEventsResponse")]
        InSite.App.UserServices.GetAccessRightEvents_Result[] GetAccessRightEvents(int systemID, int bpID, int employeeID, bool newestOnly, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessRightEvents", ReplyAction="http://tempuri.org/IUserService/GetAccessRightEventsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetAccessRightEvents_Result[]> GetAccessRightEventsAsync(int systemID, int bpID, int employeeID, bool newestOnly, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessAreaEvents", ReplyAction="http://tempuri.org/IUserService/GetAccessAreaEventsResponse")]
        InSite.App.UserServices.GetAccessAreaEvents_Result[] GetAccessAreaEvents(int systemID, int bpID, int accessRightEventID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessAreaEvents", ReplyAction="http://tempuri.org/IUserService/GetAccessAreaEventsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetAccessAreaEvents_Result[]> GetAccessAreaEventsAsync(int systemID, int bpID, int accessRightEventID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRelevantDocuments", ReplyAction="http://tempuri.org/IUserService/GetRelevantDocumentsResponse")]
        InSite.App.UserServices.GetRelevantDocuments_Result[] GetRelevantDocuments(int systemID, int bpID, int relevantDocumentID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRelevantDocuments", ReplyAction="http://tempuri.org/IUserService/GetRelevantDocumentsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetRelevantDocuments_Result[]> GetRelevantDocumentsAsync(int systemID, int bpID, int relevantDocumentID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeRelevantDocuments", ReplyAction="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsResponse")]
        InSite.App.UserServices.GetEmployeeRelevantDocuments_Result[] GetEmployeeRelevantDocuments(int systemID, int bpID, int employeeID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeRelevantDocuments", ReplyAction="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeRelevantDocuments_Result[]> GetEmployeeRelevantDocumentsAsync(int systemID, int bpID, int employeeID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithTimeSlot", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithTimeSlotResponse")]
        InSite.App.UserServices.GetEmployeesWithTimeSlot_Result[] GetEmployeesWithTimeSlot(int systemID, int bpID, int timeSlotID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithTimeSlot", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithTimeSlotResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeesWithTimeSlot_Result[]> GetEmployeesWithTimeSlotAsync(int systemID, int bpID, int timeSlotID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithRelevantDocument", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithRelevantDocumentResponse")]
        InSite.App.UserServices.GetEmployeesWithRelevantDocument_Result[] GetEmployeesWithRelevantDocument(int systemID, int bpID, int relevantDocumentID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithRelevantDocument", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithRelevantDocumentResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeesWithRelevantDocument_Result[]> GetEmployeesWithRelevantDocumentAsync(int systemID, int bpID, int relevantDocumentID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithCountry", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithCountryResponse")]
        System.Nullable<int>[] GetEmployeesWithCountry(int systemID, int bpID, string countryID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithCountry", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithCountryResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>[]> GetEmployeesWithCountryAsync(int systemID, int bpID, string countryID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithEmploymentStatus", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithEmploymentStatusResponse")]
        System.Nullable<int>[] GetEmployeesWithEmploymentStatus(int systemID, int bpID, int countryGroupIDEmployer, int countryGroupIDEmployee, int employmentStatusID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeesWithEmploymentStatus", ReplyAction="http://tempuri.org/IUserService/GetEmployeesWithEmploymentStatusResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>[]> GetEmployeesWithEmploymentStatusAsync(int systemID, int bpID, int countryGroupIDEmployer, int countryGroupIDEmployee, int employmentStatusID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPasses", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassesResponse")]
        InSite.App.UserServices.GetShortTermPasses_Result[] GetShortTermPasses(int systemID, int bpID, int shortTermPassID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPasses", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetShortTermPasses_Result[]> GetShortTermPassesAsync(int systemID, int bpID, int shortTermPassID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVisitorAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetVisitorAccessAreasResponse")]
        InSite.App.UserServices.GetVisitorAccessAreas_Result[] GetVisitorAccessAreas(int systemID, int bpID, int shortTermVisitorID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVisitorAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetVisitorAccessAreasResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetVisitorAccessAreas_Result[]> GetVisitorAccessAreasAsync(int systemID, int bpID, int shortTermVisitorID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsToAdd", ReplyAction="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsToAddResponse")]
        InSite.App.UserServices.GetEmployeeRelevantDocumentsToAdd_Result[] GetEmployeeRelevantDocumentsToAdd(int systemID, int bpID, int employeeID, int relevantFor, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsToAdd", ReplyAction="http://tempuri.org/IUserService/GetEmployeeRelevantDocumentsToAddResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeRelevantDocumentsToAdd_Result[]> GetEmployeeRelevantDocumentsToAddAsync(int systemID, int bpID, int employeeID, int relevantFor, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdminUser", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminUserResponse")]
        InSite.App.UserServices.GetCompanyAdminUser_Result[] GetCompanyAdminUser(int systemID, int companyCentralID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdminUser", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminUserResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyAdminUser_Result[]> GetCompanyAdminUserAsync(int systemID, int companyCentralID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdminUserWithBP", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminUserWithBPResponse")]
        InSite.App.UserServices.GetCompanyAdminUserWithBP_Result[] GetCompanyAdminUserWithBP(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdminUserWithBP", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminUserWithBPResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyAdminUserWithBP_Result[]> GetCompanyAdminUserWithBPAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLockedMainContractor", ReplyAction="http://tempuri.org/IUserService/GetLockedMainContractorResponse")]
        InSite.App.UserServices.GetLockedMainContractor_Result[] GetLockedMainContractor(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLockedMainContractor", ReplyAction="http://tempuri.org/IUserService/GetLockedMainContractorResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetLockedMainContractor_Result[]> GetLockedMainContractorAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSubContractors", ReplyAction="http://tempuri.org/IUserService/GetSubContractorsResponse")]
        InSite.App.UserServices.GetSubContractors_Result[] GetSubContractors(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSubContractors", ReplyAction="http://tempuri.org/IUserService/GetSubContractorsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetSubContractors_Result[]> GetSubContractorsAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePassStatus", ReplyAction="http://tempuri.org/IUserService/GetEmployeePassStatusResponse")]
        int GetEmployeePassStatus(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePassStatus", ReplyAction="http://tempuri.org/IUserService/GetEmployeePassStatusResponse")]
        System.Threading.Tasks.Task<int> GetEmployeePassStatusAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetProcessEvent", ReplyAction="http://tempuri.org/IUserService/SetProcessEventResponse")]
        int SetProcessEvent(InSite.App.UserServices.Data_ProcessEvents eventData, string fieldName, System.Tuple<string, string>[] values, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetProcessEvent", ReplyAction="http://tempuri.org/IUserService/SetProcessEventResponse")]
        System.Threading.Tasks.Task<int> SetProcessEventAsync(InSite.App.UserServices.Data_ProcessEvents eventData, string fieldName, System.Tuple<string, string>[] values, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ProcessEventDone", ReplyAction="http://tempuri.org/IUserService/ProcessEventDoneResponse")]
        int ProcessEventDone(InSite.App.UserServices.Data_ProcessEvents eventData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ProcessEventDone", ReplyAction="http://tempuri.org/IUserService/ProcessEventDoneResponse")]
        System.Threading.Tasks.Task<int> ProcessEventDoneAsync(InSite.App.UserServices.Data_ProcessEvents eventData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialogResID", ReplyAction="http://tempuri.org/IUserService/GetDialogResIDResponse")]
        string GetDialogResID(int systemID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialogResID", ReplyAction="http://tempuri.org/IUserService/GetDialogResIDResponse")]
        System.Threading.Tasks.Task<string> GetDialogResIDAsync(int systemID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpName", ReplyAction="http://tempuri.org/IUserService/GetBpNameResponse")]
        string GetBpName(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpName", ReplyAction="http://tempuri.org/IUserService/GetBpNameResponse")]
        System.Threading.Tasks.Task<string> GetBpNameAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyName", ReplyAction="http://tempuri.org/IUserService/GetCompanyNameResponse")]
        string GetCompanyName(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyName", ReplyAction="http://tempuri.org/IUserService/GetCompanyNameResponse")]
        System.Threading.Tasks.Task<string> GetCompanyNameAsync(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpCompanyName", ReplyAction="http://tempuri.org/IUserService/GetBpCompanyNameResponse")]
        string GetBpCompanyName(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetBpCompanyName", ReplyAction="http://tempuri.org/IUserService/GetBpCompanyNameResponse")]
        System.Threading.Tasks.Task<string> GetBpCompanyNameAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUnreadMailCount", ReplyAction="http://tempuri.org/IUserService/GetUnreadMailCountResponse")]
        int GetUnreadMailCount(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUnreadMailCount", ReplyAction="http://tempuri.org/IUserService/GetUnreadMailCountResponse")]
        System.Threading.Tasks.Task<int> GetUnreadMailCountAsync(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetOpenProcessCount", ReplyAction="http://tempuri.org/IUserService/GetOpenProcessCountResponse")]
        int GetOpenProcessCount(int systemID, int bpID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetOpenProcessCount", ReplyAction="http://tempuri.org/IUserService/GetOpenProcessCountResponse")]
        System.Threading.Tasks.Task<int> GetOpenProcessCountAsync(int systemID, int bpID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoles", ReplyAction="http://tempuri.org/IUserService/GetRolesResponse")]
        InSite.App.UserServices.Master_Roles[] GetRoles(int systemID, int bpID, int typeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoles", ReplyAction="http://tempuri.org/IUserService/GetRolesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Roles[]> GetRolesAsync(int systemID, int bpID, int typeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultRoleID", ReplyAction="http://tempuri.org/IUserService/GetDefaultRoleIDResponse")]
        int GetDefaultRoleID(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultRoleID", ReplyAction="http://tempuri.org/IUserService/GetDefaultRoleIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaultRoleIDAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetAccessAreasResponse")]
        InSite.App.UserServices.Master_AccessAreas[] GetAccessAreas(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessAreas", ReplyAction="http://tempuri.org/IUserService/GetAccessAreasResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_AccessAreas[]> GetAccessAreasAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultAccessAreaID", ReplyAction="http://tempuri.org/IUserService/GetDefaultAccessAreaIDResponse")]
        int GetDefaultAccessAreaID(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultAccessAreaID", ReplyAction="http://tempuri.org/IUserService/GetDefaultAccessAreaIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaultAccessAreaIDAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTimeSlotGroups", ReplyAction="http://tempuri.org/IUserService/GetTimeSlotGroupsResponse")]
        InSite.App.UserServices.Master_TimeSlotGroups[] GetTimeSlotGroups(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTimeSlotGroups", ReplyAction="http://tempuri.org/IUserService/GetTimeSlotGroupsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_TimeSlotGroups[]> GetTimeSlotGroupsAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultTimeSlotGroupID", ReplyAction="http://tempuri.org/IUserService/GetDefaultTimeSlotGroupIDResponse")]
        int GetDefaultTimeSlotGroupID(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultTimeSlotGroupID", ReplyAction="http://tempuri.org/IUserService/GetDefaultTimeSlotGroupIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaultTimeSlotGroupIDAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultSTAccessAreaID", ReplyAction="http://tempuri.org/IUserService/GetDefaultSTAccessAreaIDResponse")]
        int GetDefaultSTAccessAreaID(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultSTAccessAreaID", ReplyAction="http://tempuri.org/IUserService/GetDefaultSTAccessAreaIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaultSTAccessAreaIDAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultSTTimeSlotGroupID", ReplyAction="http://tempuri.org/IUserService/GetDefaultSTTimeSlotGroupIDResponse")]
        int GetDefaultSTTimeSlotGroupID(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaultSTTimeSlotGroupID", ReplyAction="http://tempuri.org/IUserService/GetDefaultSTTimeSlotGroupIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaultSTTimeSlotGroupIDAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetDefaultAccessAreaForUser", ReplyAction="http://tempuri.org/IUserService/SetDefaultAccessAreaForUserResponse")]
        int SetDefaultAccessAreaForUser(InSite.App.UserServices.Master_EmployeeAccessAreas accessArea, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetDefaultAccessAreaForUser", ReplyAction="http://tempuri.org/IUserService/SetDefaultAccessAreaForUserResponse")]
        System.Threading.Tasks.Task<int> SetDefaultAccessAreaForUserAsync(InSite.App.UserServices.Master_EmployeeAccessAreas accessArea, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetDefaultAccessAreaForVisitor", ReplyAction="http://tempuri.org/IUserService/SetDefaultAccessAreaForVisitorResponse")]
        int SetDefaultAccessAreaForVisitor(InSite.App.UserServices.Data_ShortTermAccessAreas accessArea, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetDefaultAccessAreaForVisitor", ReplyAction="http://tempuri.org/IUserService/SetDefaultAccessAreaForVisitorResponse")]
        System.Threading.Tasks.Task<int> SetDefaultAccessAreaForVisitorAsync(InSite.App.UserServices.Data_ShortTermAccessAreas accessArea, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassData", ReplyAction="http://tempuri.org/IUserService/GetPassDataResponse")]
        InSite.App.UserServices.Master_Passes GetPassData(int systemID, int bpID, string chipID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassData", ReplyAction="http://tempuri.org/IUserService/GetPassDataResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Passes> GetPassDataAsync(int systemID, int bpID, string chipID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVariables", ReplyAction="http://tempuri.org/IUserService/GetVariablesResponse")]
        InSite.App.UserServices.System_Variables[] GetVariables(int systemID, int fieldID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVariables", ReplyAction="http://tempuri.org/IUserService/GetVariablesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Variables[]> GetVariablesAsync(int systemID, int fieldID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFieldID", ReplyAction="http://tempuri.org/IUserService/GetFieldIDResponse")]
        int GetFieldID(int systemID, string fieldName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFieldID", ReplyAction="http://tempuri.org/IUserService/GetFieldIDResponse")]
        System.Threading.Tasks.Task<int> GetFieldIDAsync(int systemID, string fieldName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVariablesByFieldName", ReplyAction="http://tempuri.org/IUserService/GetVariablesByFieldNameResponse")]
        InSite.App.UserServices.System_Variables[] GetVariablesByFieldName(int systemID, string fieldName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetVariablesByFieldName", ReplyAction="http://tempuri.org/IUserService/GetVariablesByFieldNameResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Variables[]> GetVariablesByFieldNameAsync(int systemID, string fieldName, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTranslation", ReplyAction="http://tempuri.org/IUserService/GetTranslationResponse")]
        InSite.App.UserServices.Master_Translations GetTranslation(int systemID, int bpID, string fieldName, string languageIDUser, string languageIDClient, System.Tuple<string, string>[] values, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTranslation", ReplyAction="http://tempuri.org/IUserService/GetTranslationResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Translations> GetTranslationAsync(int systemID, int bpID, string fieldName, string languageIDUser, string languageIDClient, System.Tuple<string, string>[] values, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermVisitors", ReplyAction="http://tempuri.org/IUserService/GetShortTermVisitorsResponse")]
        InSite.App.UserServices.GetShortTermVisitors_Result[] GetShortTermVisitors(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermVisitors", ReplyAction="http://tempuri.org/IUserService/GetShortTermVisitorsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetShortTermVisitors_Result[]> GetShortTermVisitorsAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetHistoryTables", ReplyAction="http://tempuri.org/IUserService/GetHistoryTablesResponse")]
        InSite.App.UserServices.System_Tables[] GetHistoryTables(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetHistoryTables", ReplyAction="http://tempuri.org/IUserService/GetHistoryTablesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Tables[]> GetHistoryTablesAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
        InSite.App.UserServices.Master_Users[] GetUsers(int systemID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users[]> GetUsersAsync(int systemID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresentPersonsCount", ReplyAction="http://tempuri.org/IUserService/GetPresentPersonsCountResponse")]
        InSite.App.UserServices.GetPresentPersonsCount_Result GetPresentPersonsCount(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresentPersonsCount", ReplyAction="http://tempuri.org/IUserService/GetPresentPersonsCountResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentPersonsCount_Result> GetPresentPersonsCountAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassBillings", ReplyAction="http://tempuri.org/IUserService/GetPassBillingsResponse")]
        InSite.App.UserServices.GetPassBillings_Result[] GetPassBillings(int systemID, int bpID, int companyID, int evaluationPeriod, System.DateTime dateFrom, System.DateTime dateUntil, int level, string remarks, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassBillings", ReplyAction="http://tempuri.org/IUserService/GetPassBillingsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPassBillings_Result[]> GetPassBillingsAsync(int systemID, int bpID, int companyID, int evaluationPeriod, System.DateTime dateFrom, System.DateTime dateUntil, int level, string remarks, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTariffData", ReplyAction="http://tempuri.org/IUserService/GetTariffDataResponse")]
        InSite.App.UserServices.GetTariffData_Result[] GetTariffData(int systemID, int tariffID, int tariffContractID, int tariffScopeID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, int reportType, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTariffData", ReplyAction="http://tempuri.org/IUserService/GetTariffDataResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetTariffData_Result[]> GetTariffDataAsync(int systemID, int tariffID, int tariffContractID, int tariffScopeID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, int reportType, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresenceData", ReplyAction="http://tempuri.org/IUserService/GetPresenceDataResponse")]
        InSite.App.UserServices.GetPresenceData_Result[] GetPresenceData(int systemID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, bool nameIsVisible, int companyLevel, int compressLevel, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresenceData", ReplyAction="http://tempuri.org/IUserService/GetPresenceDataResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPresenceData_Result[]> GetPresenceDataAsync(int systemID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, bool nameIsVisible, int companyLevel, int compressLevel, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresenceDataNow", ReplyAction="http://tempuri.org/IUserService/GetPresenceDataNowResponse")]
        InSite.App.UserServices.GetPresenceDataNow_Result[] GetPresenceDataNow(int systemID, int bpID, int companyID, int companyLevel, int accessAreaID, System.DateTime presenceDay, bool presentOnly, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresenceDataNow", ReplyAction="http://tempuri.org/IUserService/GetPresenceDataNowResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPresenceDataNow_Result[]> GetPresenceDataNowAsync(int systemID, int bpID, int companyID, int companyLevel, int accessAreaID, System.DateTime presenceDay, bool presentOnly, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTradeReportData", ReplyAction="http://tempuri.org/IUserService/GetTradeReportDataResponse")]
        InSite.App.UserServices.GetTradeReportData_Result[] GetTradeReportData(int systemID, int bpID, System.DateTime dateFrom, System.DateTime dateUntil, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTradeReportData", ReplyAction="http://tempuri.org/IUserService/GetTradeReportDataResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetTradeReportData_Result[]> GetTradeReportDataAsync(int systemID, int bpID, System.DateTime dateFrom, System.DateTime dateUntil, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTemplates", ReplyAction="http://tempuri.org/IUserService/GetTemplatesResponse")]
        InSite.App.UserServices.GetTemplates_Result[] GetTemplates(int systemID, int bpID, string dialogName, bool withFileData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTemplates", ReplyAction="http://tempuri.org/IUserService/GetTemplatesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetTemplates_Result[]> GetTemplatesAsync(int systemID, int bpID, string dialogName, bool withFileData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTemplate", ReplyAction="http://tempuri.org/IUserService/GetTemplateResponse")]
        InSite.App.UserServices.Master_Templates GetTemplate(int systemID, int bpID, int templateID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetTemplate", ReplyAction="http://tempuri.org/IUserService/GetTemplateResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Templates> GetTemplateAsync(int systemID, int bpID, int templateID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessage", ReplyAction="http://tempuri.org/IUserService/SendMessageResponse")]
        int SendMessage(int systemID, int jobID, int receiverID, string subject, string body, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessage", ReplyAction="http://tempuri.org/IUserService/SendMessageResponse")]
        System.Threading.Tasks.Task<int> SendMessageAsync(int systemID, int jobID, int receiverID, string subject, string body, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessageToUsersWithRight", ReplyAction="http://tempuri.org/IUserService/SendMessageToUsersWithRightResponse")]
        int SendMessageToUsersWithRight(int systemID, int bpID, int jobID, int dialogID, int actionID, string subject, string body, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessageToUsersWithRight", ReplyAction="http://tempuri.org/IUserService/SendMessageToUsersWithRightResponse")]
        System.Threading.Tasks.Task<int> SendMessageToUsersWithRightAsync(int systemID, int bpID, int jobID, int dialogID, int actionID, string subject, string body, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyTariff", ReplyAction="http://tempuri.org/IUserService/GetCompanyTariffResponse")]
        InSite.App.UserServices.GetCompanyTariff_Result GetCompanyTariff(int systemID, int companyID, int tariffScopeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyTariff", ReplyAction="http://tempuri.org/IUserService/GetCompanyTariffResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyTariff_Result> GetCompanyTariffAsync(int systemID, int companyID, int tariffScopeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReportMinWageData", ReplyAction="http://tempuri.org/IUserService/GetReportMinWageDataResponse")]
        InSite.App.UserServices.GetReportMinWageData_Result[] GetReportMinWageData(int systemID, int bpID, System.DateTime monthFrom, System.DateTime monthUntil, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetReportMinWageData", ReplyAction="http://tempuri.org/IUserService/GetReportMinWageDataResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetReportMinWageData_Result[]> GetReportMinWageDataAsync(int systemID, int bpID, System.DateTime monthFrom, System.DateTime monthUntil, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyInfo", ReplyAction="http://tempuri.org/IUserService/GetCompanyInfoResponse")]
        InSite.App.UserServices.GetCompanyInfo_Result[] GetCompanyInfo(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyInfo", ReplyAction="http://tempuri.org/IUserService/GetCompanyInfoResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyInfo_Result[]> GetCompanyInfoAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMWAttestationRequests", ReplyAction="http://tempuri.org/IUserService/GetMWAttestationRequestsResponse")]
        InSite.App.UserServices.GetMWAttestationRequests_Result[] GetMWAttestationRequests(int systemID, int bpID, int companyID, int requestID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMWAttestationRequests", ReplyAction="http://tempuri.org/IUserService/GetMWAttestationRequestsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetMWAttestationRequests_Result[]> GetMWAttestationRequestsAsync(int systemID, int bpID, int companyID, int requestID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialog", ReplyAction="http://tempuri.org/IUserService/GetDialogResponse")]
        InSite.App.UserServices.System_Dialogs GetDialog(int systemID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDialog", ReplyAction="http://tempuri.org/IUserService/GetDialogResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Dialogs> GetDialogAsync(int systemID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPass", ReplyAction="http://tempuri.org/IUserService/GetPassResponse")]
        InSite.App.UserServices.Pass GetPass(int systemID, int bpID, int employeeID, bool withFileData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPass", ReplyAction="http://tempuri.org/IUserService/GetPassResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Pass> GetPassAsync(int systemID, int bpID, int employeeID, bool withFileData, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPassPrint", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassPrintResponse")]
        InSite.App.UserServices.ShortTermPassPrint GetShortTermPassPrint(int systemID, int bpID, int printID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPassPrint", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassPrintResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.ShortTermPassPrint> GetShortTermPassPrintAsync(int systemID, int bpID, int printID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        InSite.App.UserServices.Master_Users GetUser(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users> GetUserAsync(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPassTemplate", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassTemplateResponse")]
        string GetShortTermPassTemplate(int systemID, int bpID, int shortTermPassTypeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShortTermPassTemplate", ReplyAction="http://tempuri.org/IUserService/GetShortTermPassTemplateResponse")]
        System.Threading.Tasks.Task<string> GetShortTermPassTemplateAsync(int systemID, int bpID, int shortTermPassTypeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePassTemplate", ReplyAction="http://tempuri.org/IUserService/GetEmployeePassTemplateResponse")]
        string GetEmployeePassTemplate(int systemID, int bpID, int employeeID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePassTemplate", ReplyAction="http://tempuri.org/IUserService/GetEmployeePassTemplateResponse")]
        System.Threading.Tasks.Task<string> GetEmployeePassTemplateAsync(int systemID, int bpID, int employeeID, int dialogID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresentPersonsPerAccessArea", ReplyAction="http://tempuri.org/IUserService/GetPresentPersonsPerAccessAreaResponse")]
        InSite.App.UserServices.GetPresentPersonsPerAccessArea_Result[] GetPresentPersonsPerAccessArea(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPresentPersonsPerAccessArea", ReplyAction="http://tempuri.org/IUserService/GetPresentPersonsPerAccessAreaResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentPersonsPerAccessArea_Result[]> GetPresentPersonsPerAccessAreaAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMissingFirstAiders", ReplyAction="http://tempuri.org/IUserService/GetMissingFirstAidersResponse")]
        InSite.App.UserServices.GetMissingFirstAiders_Result[] GetMissingFirstAiders(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMissingFirstAiders", ReplyAction="http://tempuri.org/IUserService/GetMissingFirstAidersResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetMissingFirstAiders_Result[]> GetMissingFirstAidersAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastUpdateAccessControl", ReplyAction="http://tempuri.org/IUserService/GetLastUpdateAccessControlResponse")]
        InSite.App.UserServices.Master_AccessSystems GetLastUpdateAccessControl(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastUpdateAccessControl", ReplyAction="http://tempuri.org/IUserService/GetLastUpdateAccessControlResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_AccessSystems> GetLastUpdateAccessControlAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastBackupDate", ReplyAction="http://tempuri.org/IUserService/GetLastBackupDateResponse")]
        System.DateTime GetLastBackupDate(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastBackupDate", ReplyAction="http://tempuri.org/IUserService/GetLastBackupDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLastBackupDateAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastCompressDate", ReplyAction="http://tempuri.org/IUserService/GetLastCompressDateResponse")]
        System.DateTime GetLastCompressDate(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastCompressDate", ReplyAction="http://tempuri.org/IUserService/GetLastCompressDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLastCompressDateAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassInfo", ReplyAction="http://tempuri.org/IUserService/GetPassInfoResponse")]
        InSite.App.UserServices.GetPassInfo_Result[] GetPassInfo(string internalID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPassInfo", ReplyAction="http://tempuri.org/IUserService/GetPassInfoResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPassInfo_Result[]> GetPassInfoAsync(string internalID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyMWContact", ReplyAction="http://tempuri.org/IUserService/GetCompanyMWContactResponse")]
        InSite.App.UserServices.Master_CompanyContacts GetCompanyMWContact(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyMWContact", ReplyAction="http://tempuri.org/IUserService/GetCompanyMWContactResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_CompanyContacts> GetCompanyMWContactAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdmin", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminResponse")]
        InSite.App.UserServices.Master_Users GetCompanyAdmin(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyAdmin", ReplyAction="http://tempuri.org/IUserService/GetCompanyAdminResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users> GetCompanyAdminAsync(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/HasRightForDialog", ReplyAction="http://tempuri.org/IUserService/HasRightForDialogResponse")]
        bool HasRightForDialog(int systemID, int bpID, int dialogID, int roleID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/HasRightForDialog", ReplyAction="http://tempuri.org/IUserService/HasRightForDialogResponse")]
        System.Threading.Tasks.Task<bool> HasRightForDialogAsync(int systemID, int bpID, int dialogID, int roleID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRelevantDocumentImage", ReplyAction="http://tempuri.org/IUserService/GetRelevantDocumentImageResponse")]
        byte[] GetRelevantDocumentImage(int systemID, int bpID, int relevantDocumentID, int maxWidth, int maxHeight, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRelevantDocumentImage", ReplyAction="http://tempuri.org/IUserService/GetRelevantDocumentImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetRelevantDocumentImageAsync(int systemID, int bpID, int relevantDocumentID, int maxWidth, int maxHeight, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetMailRead", ReplyAction="http://tempuri.org/IUserService/SetMailReadResponse")]
        void SetMailRead(int systemID, int mailID, bool mailRead, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetMailRead", ReplyAction="http://tempuri.org/IUserService/SetMailReadResponse")]
        System.Threading.Tasks.Task SetMailReadAsync(int systemID, int mailID, bool mailRead, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDocument", ReplyAction="http://tempuri.org/IUserService/GetDocumentResponse")]
        InSite.App.UserServices.Document GetDocument(int systemID, int documentID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDocument", ReplyAction="http://tempuri.org/IUserService/GetDocumentResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Document> GetDocumentAsync(int systemID, int documentID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RenderReport", ReplyAction="http://tempuri.org/IUserService/RenderReportResponse")]
        InSite.App.UserServices.Document RenderReport(string reportParameter, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RenderReport", ReplyAction="http://tempuri.org/IUserService/RenderReportResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Document> RenderReportAsync(string reportParameter, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetAttachmentToMessage", ReplyAction="http://tempuri.org/IUserService/SetAttachmentToMessageResponse")]
        int SetAttachmentToMessage(int systemID, int jobID, int messageID, byte[] fileData, string fileName, string fileType, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetAttachmentToMessage", ReplyAction="http://tempuri.org/IUserService/SetAttachmentToMessageResponse")]
        System.Threading.Tasks.Task<int> SetAttachmentToMessageAsync(int systemID, int jobID, int messageID, byte[] fileData, string fileName, string fileType, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetHelp", ReplyAction="http://tempuri.org/IUserService/GetHelpResponse")]
        InSite.App.UserServices.System_Help GetHelp(int systemID, int dialogID, int fieldID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetHelp", ReplyAction="http://tempuri.org/IUserService/GetHelpResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Help> GetHelpAsync(int systemID, int dialogID, int fieldID, string languageID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetExpiringTariffs", ReplyAction="http://tempuri.org/IUserService/GetExpiringTariffsResponse")]
        InSite.App.UserServices.GetExpiringTariffs_Result[] GetExpiringTariffs(int systemID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetExpiringTariffs", ReplyAction="http://tempuri.org/IUserService/GetExpiringTariffsResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetExpiringTariffs_Result[]> GetExpiringTariffsAsync(int systemID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SessionLogger", ReplyAction="http://tempuri.org/IUserService/SessionLoggerResponse")]
        void SessionLogger(string sessionID, int sessionState, System.Nullable<int> systemID, System.Nullable<int> userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SessionLogger", ReplyAction="http://tempuri.org/IUserService/SessionLoggerResponse")]
        System.Threading.Tasks.Task SessionLoggerAsync(string sessionID, int sessionState, System.Nullable<int> systemID, System.Nullable<int> userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsPassCaseFirstIssue", ReplyAction="http://tempuri.org/IUserService/IsPassCaseFirstIssueResponse")]
        bool IsPassCaseFirstIssue(int systemID, int bpID, int replacementPassCaseID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsPassCaseFirstIssue", ReplyAction="http://tempuri.org/IUserService/IsPassCaseFirstIssueResponse")]
        System.Threading.Tasks.Task<bool> IsPassCaseFirstIssueAsync(int systemID, int bpID, int replacementPassCaseID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AllTerminalsOnline", ReplyAction="http://tempuri.org/IUserService/AllTerminalsOnlineResponse")]
        bool AllTerminalsOnline(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AllTerminalsOnline", ReplyAction="http://tempuri.org/IUserService/AllTerminalsOnlineResponse")]
        System.Threading.Tasks.Task<bool> AllTerminalsOnlineAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeDuplicates", ReplyAction="http://tempuri.org/IUserService/GetEmployeeDuplicatesResponse")]
        InSite.App.UserServices.GetEmployeeDuplicates_Result[] GetEmployeeDuplicates(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeeDuplicates", ReplyAction="http://tempuri.org/IUserService/GetEmployeeDuplicatesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeDuplicates_Result[]> GetEmployeeDuplicatesAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyCentralDuplicates", ReplyAction="http://tempuri.org/IUserService/GetCompanyCentralDuplicatesResponse")]
        InSite.App.UserServices.GetCompanyCentralDuplicates_Result[] GetCompanyCentralDuplicates(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyCentralDuplicates", ReplyAction="http://tempuri.org/IUserService/GetCompanyCentralDuplicatesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyCentralDuplicates_Result[]> GetCompanyCentralDuplicatesAsync(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserDuplicates", ReplyAction="http://tempuri.org/IUserService/GetUserDuplicatesResponse")]
        InSite.App.UserServices.GetUserDuplicates_Result[] GetUserDuplicates(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserDuplicates", ReplyAction="http://tempuri.org/IUserService/GetUserDuplicatesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetUserDuplicates_Result[]> GetUserDuplicatesAsync(int systemID, int userID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyCentralInfo", ReplyAction="http://tempuri.org/IUserService/GetCompanyCentralInfoResponse")]
        InSite.App.UserServices.System_Companies GetCompanyCentralInfo(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCompanyCentralInfo", ReplyAction="http://tempuri.org/IUserService/GetCompanyCentralInfoResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.System_Companies> GetCompanyCentralInfoAsync(int systemID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastCorrectionDate", ReplyAction="http://tempuri.org/IUserService/GetLastCorrectionDateResponse")]
        System.DateTime GetLastCorrectionDate(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLastCorrectionDate", ReplyAction="http://tempuri.org/IUserService/GetLastCorrectionDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLastCorrectionDateAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMainContractorStatus", ReplyAction="http://tempuri.org/IUserService/GetMainContractorStatusResponse")]
        int GetMainContractorStatus(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMainContractorStatus", ReplyAction="http://tempuri.org/IUserService/GetMainContractorStatusResponse")]
        System.Threading.Tasks.Task<int> GetMainContractorStatusAsync(int systemID, int bpID, int companyID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateThumbnails", ReplyAction="http://tempuri.org/IUserService/UpdateThumbnailsResponse")]
        void UpdateThumbnails(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateThumbnails", ReplyAction="http://tempuri.org/IUserService/UpdateThumbnailsResponse")]
        System.Threading.Tasks.Task UpdateThumbnailsAsync(int systemID, int bpID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePhotoData", ReplyAction="http://tempuri.org/IUserService/GetEmployeePhotoDataResponse")]
        byte[] GetEmployeePhotoData(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmployeePhotoData", ReplyAction="http://tempuri.org/IUserService/GetEmployeePhotoDataResponse")]
        System.Threading.Tasks.Task<byte[]> GetEmployeePhotoDataAsync(int systemID, int bpID, int employeeID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EmploymentStatusMWObligate", ReplyAction="http://tempuri.org/IUserService/EmploymentStatusMWObligateResponse")]
        bool EmploymentStatusMWObligate(int systemID, int bpID, int employmentStatusID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EmploymentStatusMWObligate", ReplyAction="http://tempuri.org/IUserService/EmploymentStatusMWObligateResponse")]
        System.Threading.Tasks.Task<bool> EmploymentStatusMWObligateAsync(int systemID, int bpID, int employmentStatusID, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAvailableFirstAiders", ReplyAction="http://tempuri.org/IUserService/GetAvailableFirstAidersResponse")]
        InSite.App.UserServices.GetPresentFirstAiders_Result[] GetAvailableFirstAiders(int systemID, int bpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAvailableFirstAiders", ReplyAction="http://tempuri.org/IUserService/GetAvailableFirstAidersResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentFirstAiders_Result[]> GetAvailableFirstAidersAsync(int systemID, int bpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessHistoryForShortTermPasses", ReplyAction="http://tempuri.org/IUserService/GetAccessHistoryForShortTermPassesResponse")]
        InSite.App.UserServices.Data_AccessEvents[] GetAccessHistoryForShortTermPasses(int systemId, int bpId, string internalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAccessHistoryForShortTermPasses", ReplyAction="http://tempuri.org/IUserService/GetAccessHistoryForShortTermPassesResponse")]
        System.Threading.Tasks.Task<InSite.App.UserServices.Data_AccessEvents[]> GetAccessHistoryForShortTermPassesAsync(int systemId, int bpId, string internalId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : InSite.App.UserServices.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<InSite.App.UserServices.IUserService>, InSite.App.UserServices.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InSite.App.UserServices.UserAssignments[] Login(string userName, string passWord, string sessionID) {
            return base.Channel.Login(userName, passWord, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments[]> LoginAsync(string userName, string passWord, string sessionID) {
            return base.Channel.LoginAsync(userName, passWord, sessionID);
        }
        
        public int UpdateUser(string columnName, string columnValue, int userID, string sessionID) {
            return base.Channel.UpdateUser(columnName, columnValue, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(string columnName, string columnValue, int userID, string sessionID) {
            return base.Channel.UpdateUserAsync(columnName, columnValue, userID, sessionID);
        }
        
        public int UpdatePwd(string oldPwd, string newPwd, int userID, string sessionID, string userName, bool ignore, bool needsPwdChange) {
            return base.Channel.UpdatePwd(oldPwd, newPwd, userID, sessionID, userName, ignore, needsPwdChange);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePwdAsync(string oldPwd, string newPwd, int userID, string sessionID, string userName, bool ignore, bool needsPwdChange) {
            return base.Channel.UpdatePwdAsync(oldPwd, newPwd, userID, sessionID, userName, ignore, needsPwdChange);
        }
        
        public InSite.App.UserServices.Master_BuildingProjects GetBpInfo(int bpID, string sessionID) {
            return base.Channel.GetBpInfo(bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_BuildingProjects> GetBpInfoAsync(int bpID, string sessionID) {
            return base.Channel.GetBpInfoAsync(bpID, sessionID);
        }
        
        public InSite.App.UserServices.Master_BuildingProjects[] GetAllBpsInfo(string sessionID) {
            return base.Channel.GetAllBpsInfo(sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_BuildingProjects[]> GetAllBpsInfoAsync(string sessionID) {
            return base.Channel.GetAllBpsInfoAsync(sessionID);
        }
        
        public InSite.App.UserServices.GetFieldsConfig_Result[] GetFieldsConfig(int systemID, int bpID, int roleID, int dialogID, int actionID, string languageID, string sessionID) {
            return base.Channel.GetFieldsConfig(systemID, bpID, roleID, dialogID, actionID, languageID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetFieldsConfig_Result[]> GetFieldsConfigAsync(int systemID, int bpID, int roleID, int dialogID, int actionID, string languageID, string sessionID) {
            return base.Channel.GetFieldsConfigAsync(systemID, bpID, roleID, dialogID, actionID, languageID, sessionID);
        }
        
        public InSite.App.UserServices.PrintPass_Result PrintPass(int systemID, int bpID, int employeeID, int replacementPassCaseID, string reason, string userName, string deactivationMessage, string sessionID) {
            return base.Channel.PrintPass(systemID, bpID, employeeID, replacementPassCaseID, reason, userName, deactivationMessage, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.PrintPass_Result> PrintPassAsync(int systemID, int bpID, int employeeID, int replacementPassCaseID, string reason, string userName, string deactivationMessage, string sessionID) {
            return base.Channel.PrintPassAsync(systemID, bpID, employeeID, replacementPassCaseID, reason, userName, deactivationMessage, sessionID);
        }
        
        public int ActivatePass(int systemID, int bpID, int employeeID, string internalID, string userName, string sessionID) {
            return base.Channel.ActivatePass(systemID, bpID, employeeID, internalID, userName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> ActivatePassAsync(int systemID, int bpID, int employeeID, string internalID, string userName, string sessionID) {
            return base.Channel.ActivatePassAsync(systemID, bpID, employeeID, internalID, userName, sessionID);
        }
        
        public int DeactivatePass(int systemID, int bpID, int employeeID, string internalID, string reason, string userName, string sessionID) {
            return base.Channel.DeactivatePass(systemID, bpID, employeeID, internalID, reason, userName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> DeactivatePassAsync(int systemID, int bpID, int employeeID, string internalID, string reason, string userName, string sessionID) {
            return base.Channel.DeactivatePassAsync(systemID, bpID, employeeID, internalID, reason, userName, sessionID);
        }
        
        public int LockPass(int systemID, int bpID, int employeeID, string reason, string userName, string sessionID) {
            return base.Channel.LockPass(systemID, bpID, employeeID, reason, userName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> LockPassAsync(int systemID, int bpID, int employeeID, string reason, string userName, string sessionID) {
            return base.Channel.LockPassAsync(systemID, bpID, employeeID, reason, userName, sessionID);
        }
        
        public bool IsFirstPass(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.IsFirstPass(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> IsFirstPassAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.IsFirstPassAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public InSite.App.UserServices.EmployeeRegistrationData ValidateRegistrationCode(string code, string sessionID) {
            return base.Channel.ValidateRegistrationCode(code, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.EmployeeRegistrationData> ValidateRegistrationCodeAsync(string code, string sessionID) {
            return base.Channel.ValidateRegistrationCodeAsync(code, sessionID);
        }
        
        public bool LoginNameIsUnique(string loginName, string sessionID) {
            return base.Channel.LoginNameIsUnique(loginName, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> LoginNameIsUniqueAsync(string loginName, string sessionID) {
            return base.Channel.LoginNameIsUniqueAsync(loginName, sessionID);
        }
        
        public InSite.App.UserServices.UserAssignments[] GetUsersWithRole(int systemID, int bpID, int typeID, string sessionID) {
            return base.Channel.GetUsersWithRole(systemID, bpID, typeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments[]> GetUsersWithRoleAsync(int systemID, int bpID, int typeID, string sessionID) {
            return base.Channel.GetUsersWithRoleAsync(systemID, bpID, typeID, sessionID);
        }
        
        public int GetAppliedRule(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetAppliedRule(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetAppliedRuleAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetAppliedRuleAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public InSite.App.UserServices.UserAssignments GetUserWithLoginName(string loginName, string sessionID) {
            return base.Channel.GetUserWithLoginName(loginName, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.UserAssignments> GetUserWithLoginNameAsync(string loginName, string sessionID) {
            return base.Channel.GetUserWithLoginNameAsync(loginName, sessionID);
        }
        
        public int GetNextID(int systemID, string idName, string sessionID) {
            return base.Channel.GetNextID(systemID, idName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetNextIDAsync(int systemID, string idName, string sessionID) {
            return base.Channel.GetNextIDAsync(systemID, idName, sessionID);
        }
        
        public int PrintShortTermPasses(int systemID, int bpID, int shortTermPassTypeID, int passCount, string userName, string sessionID) {
            return base.Channel.PrintShortTermPasses(systemID, bpID, shortTermPassTypeID, passCount, userName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> PrintShortTermPassesAsync(int systemID, int bpID, int shortTermPassTypeID, int passCount, string userName, string sessionID) {
            return base.Channel.PrintShortTermPassesAsync(systemID, bpID, shortTermPassTypeID, passCount, userName, sessionID);
        }
        
        public int UpdateShortTermPass(int systemID, int bpID, int shortTermPassID, string internalID, string userName, string sessionID) {
            return base.Channel.UpdateShortTermPass(systemID, bpID, shortTermPassID, internalID, userName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateShortTermPassAsync(int systemID, int bpID, int shortTermPassID, string internalID, string userName, string sessionID) {
            return base.Channel.UpdateShortTermPassAsync(systemID, bpID, shortTermPassID, internalID, userName, sessionID);
        }
        
        public InSite.App.UserServices.ShortTermPass GetShortTermPass(int systemID, int bpID, string internalID, string sessionID) {
            return base.Channel.GetShortTermPass(systemID, bpID, internalID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.ShortTermPass> GetShortTermPassAsync(int systemID, int bpID, string internalID, string sessionID) {
            return base.Channel.GetShortTermPassAsync(systemID, bpID, internalID, sessionID);
        }
        
        public int GetTreeNodeID(int systemID, string dialogName, string sessionID) {
            return base.Channel.GetTreeNodeID(systemID, dialogName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetTreeNodeIDAsync(int systemID, string dialogName, string sessionID) {
            return base.Channel.GetTreeNodeIDAsync(systemID, dialogName, sessionID);
        }
        
        public int GetDialogID(int systemID, string dialogName, string sessionID) {
            return base.Channel.GetDialogID(systemID, dialogName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDialogIDAsync(int systemID, string dialogName, string sessionID) {
            return base.Channel.GetDialogIDAsync(systemID, dialogName, sessionID);
        }
        
        public int RowCount(string tableName, System.Tuple<string, int>[] whereInt, System.Tuple<string, string>[] whereString, string sessionID) {
            return base.Channel.RowCount(tableName, whereInt, whereString, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> RowCountAsync(string tableName, System.Tuple<string, int>[] whereInt, System.Tuple<string, string>[] whereString, string sessionID) {
            return base.Channel.RowCountAsync(tableName, whereInt, whereString, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyStatistics_Result GetCompanyStatistics(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyStatistics(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyStatistics_Result> GetCompanyStatisticsAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyStatisticsAsync(systemID, bpID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployees_Result[] GetEmployees(int systemID, int bpID, int companyCentralID, int companyID, int employeeID, string externalPassID, int employmentStatusID, int tradeID, int userID, string sessionID) {
            return base.Channel.GetEmployees(systemID, bpID, companyCentralID, companyID, employeeID, externalPassID, employmentStatusID, tradeID, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployees_Result[]> GetEmployeesAsync(int systemID, int bpID, int companyCentralID, int companyID, int employeeID, string externalPassID, int employmentStatusID, int tradeID, int userID, string sessionID) {
            return base.Channel.GetEmployeesAsync(systemID, bpID, companyCentralID, companyID, employeeID, externalPassID, employmentStatusID, tradeID, userID, sessionID);
        }
        
        public void CreateAccessRightEvent(InSite.App.UserServices.Data_AccessRightEvents rightEvent, InSite.App.UserServices.Data_AccessAreaEvents[] areaEvents, string deactivationMessage, string sessionID) {
            base.Channel.CreateAccessRightEvent(rightEvent, areaEvents, deactivationMessage, sessionID);
        }
        
        public System.Threading.Tasks.Task CreateAccessRightEventAsync(InSite.App.UserServices.Data_AccessRightEvents rightEvent, InSite.App.UserServices.Data_AccessAreaEvents[] areaEvents, string deactivationMessage, string sessionID) {
            return base.Channel.CreateAccessRightEventAsync(rightEvent, areaEvents, deactivationMessage, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeeAccessAreas_Result[] GetEmployeeAccessAreas(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeeAccessAreas(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeAccessAreas_Result[]> GetEmployeeAccessAreasAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeeAccessAreasAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public InSite.App.UserServices.HasValidDocumentRelevantFor_Result[] HasValidDocumentRelevantFor(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.HasValidDocumentRelevantFor(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.HasValidDocumentRelevantFor_Result[]> HasValidDocumentRelevantForAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.HasValidDocumentRelevantForAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public InSite.App.UserServices.GetAccessRightEvents_Result[] GetAccessRightEvents(int systemID, int bpID, int employeeID, bool newestOnly, string sessionID) {
            return base.Channel.GetAccessRightEvents(systemID, bpID, employeeID, newestOnly, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetAccessRightEvents_Result[]> GetAccessRightEventsAsync(int systemID, int bpID, int employeeID, bool newestOnly, string sessionID) {
            return base.Channel.GetAccessRightEventsAsync(systemID, bpID, employeeID, newestOnly, sessionID);
        }
        
        public InSite.App.UserServices.GetAccessAreaEvents_Result[] GetAccessAreaEvents(int systemID, int bpID, int accessRightEventID, string sessionID) {
            return base.Channel.GetAccessAreaEvents(systemID, bpID, accessRightEventID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetAccessAreaEvents_Result[]> GetAccessAreaEventsAsync(int systemID, int bpID, int accessRightEventID, string sessionID) {
            return base.Channel.GetAccessAreaEventsAsync(systemID, bpID, accessRightEventID, sessionID);
        }
        
        public InSite.App.UserServices.GetRelevantDocuments_Result[] GetRelevantDocuments(int systemID, int bpID, int relevantDocumentID, string languageID, string sessionID) {
            return base.Channel.GetRelevantDocuments(systemID, bpID, relevantDocumentID, languageID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetRelevantDocuments_Result[]> GetRelevantDocumentsAsync(int systemID, int bpID, int relevantDocumentID, string languageID, string sessionID) {
            return base.Channel.GetRelevantDocumentsAsync(systemID, bpID, relevantDocumentID, languageID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeeRelevantDocuments_Result[] GetEmployeeRelevantDocuments(int systemID, int bpID, int employeeID, string languageID, string sessionID) {
            return base.Channel.GetEmployeeRelevantDocuments(systemID, bpID, employeeID, languageID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeRelevantDocuments_Result[]> GetEmployeeRelevantDocumentsAsync(int systemID, int bpID, int employeeID, string languageID, string sessionID) {
            return base.Channel.GetEmployeeRelevantDocumentsAsync(systemID, bpID, employeeID, languageID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeesWithTimeSlot_Result[] GetEmployeesWithTimeSlot(int systemID, int bpID, int timeSlotID, string sessionID) {
            return base.Channel.GetEmployeesWithTimeSlot(systemID, bpID, timeSlotID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeesWithTimeSlot_Result[]> GetEmployeesWithTimeSlotAsync(int systemID, int bpID, int timeSlotID, string sessionID) {
            return base.Channel.GetEmployeesWithTimeSlotAsync(systemID, bpID, timeSlotID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeesWithRelevantDocument_Result[] GetEmployeesWithRelevantDocument(int systemID, int bpID, int relevantDocumentID, string sessionID) {
            return base.Channel.GetEmployeesWithRelevantDocument(systemID, bpID, relevantDocumentID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeesWithRelevantDocument_Result[]> GetEmployeesWithRelevantDocumentAsync(int systemID, int bpID, int relevantDocumentID, string sessionID) {
            return base.Channel.GetEmployeesWithRelevantDocumentAsync(systemID, bpID, relevantDocumentID, sessionID);
        }
        
        public System.Nullable<int>[] GetEmployeesWithCountry(int systemID, int bpID, string countryID, string sessionID) {
            return base.Channel.GetEmployeesWithCountry(systemID, bpID, countryID, sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>[]> GetEmployeesWithCountryAsync(int systemID, int bpID, string countryID, string sessionID) {
            return base.Channel.GetEmployeesWithCountryAsync(systemID, bpID, countryID, sessionID);
        }
        
        public System.Nullable<int>[] GetEmployeesWithEmploymentStatus(int systemID, int bpID, int countryGroupIDEmployer, int countryGroupIDEmployee, int employmentStatusID, string sessionID) {
            return base.Channel.GetEmployeesWithEmploymentStatus(systemID, bpID, countryGroupIDEmployer, countryGroupIDEmployee, employmentStatusID, sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>[]> GetEmployeesWithEmploymentStatusAsync(int systemID, int bpID, int countryGroupIDEmployer, int countryGroupIDEmployee, int employmentStatusID, string sessionID) {
            return base.Channel.GetEmployeesWithEmploymentStatusAsync(systemID, bpID, countryGroupIDEmployer, countryGroupIDEmployee, employmentStatusID, sessionID);
        }
        
        public InSite.App.UserServices.GetShortTermPasses_Result[] GetShortTermPasses(int systemID, int bpID, int shortTermPassID, string sessionID) {
            return base.Channel.GetShortTermPasses(systemID, bpID, shortTermPassID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetShortTermPasses_Result[]> GetShortTermPassesAsync(int systemID, int bpID, int shortTermPassID, string sessionID) {
            return base.Channel.GetShortTermPassesAsync(systemID, bpID, shortTermPassID, sessionID);
        }
        
        public InSite.App.UserServices.GetVisitorAccessAreas_Result[] GetVisitorAccessAreas(int systemID, int bpID, int shortTermVisitorID, string sessionID) {
            return base.Channel.GetVisitorAccessAreas(systemID, bpID, shortTermVisitorID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetVisitorAccessAreas_Result[]> GetVisitorAccessAreasAsync(int systemID, int bpID, int shortTermVisitorID, string sessionID) {
            return base.Channel.GetVisitorAccessAreasAsync(systemID, bpID, shortTermVisitorID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeeRelevantDocumentsToAdd_Result[] GetEmployeeRelevantDocumentsToAdd(int systemID, int bpID, int employeeID, int relevantFor, string sessionID) {
            return base.Channel.GetEmployeeRelevantDocumentsToAdd(systemID, bpID, employeeID, relevantFor, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeRelevantDocumentsToAdd_Result[]> GetEmployeeRelevantDocumentsToAddAsync(int systemID, int bpID, int employeeID, int relevantFor, string sessionID) {
            return base.Channel.GetEmployeeRelevantDocumentsToAddAsync(systemID, bpID, employeeID, relevantFor, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyAdminUser_Result[] GetCompanyAdminUser(int systemID, int companyCentralID, string sessionID) {
            return base.Channel.GetCompanyAdminUser(systemID, companyCentralID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyAdminUser_Result[]> GetCompanyAdminUserAsync(int systemID, int companyCentralID, string sessionID) {
            return base.Channel.GetCompanyAdminUserAsync(systemID, companyCentralID, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyAdminUserWithBP_Result[] GetCompanyAdminUserWithBP(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyAdminUserWithBP(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyAdminUserWithBP_Result[]> GetCompanyAdminUserWithBPAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyAdminUserWithBPAsync(systemID, bpID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetLockedMainContractor_Result[] GetLockedMainContractor(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetLockedMainContractor(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetLockedMainContractor_Result[]> GetLockedMainContractorAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetLockedMainContractorAsync(systemID, bpID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetSubContractors_Result[] GetSubContractors(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetSubContractors(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetSubContractors_Result[]> GetSubContractorsAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetSubContractorsAsync(systemID, bpID, companyID, sessionID);
        }
        
        public int GetEmployeePassStatus(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeePassStatus(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetEmployeePassStatusAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeePassStatusAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public int SetProcessEvent(InSite.App.UserServices.Data_ProcessEvents eventData, string fieldName, System.Tuple<string, string>[] values, string sessionID) {
            return base.Channel.SetProcessEvent(eventData, fieldName, values, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SetProcessEventAsync(InSite.App.UserServices.Data_ProcessEvents eventData, string fieldName, System.Tuple<string, string>[] values, string sessionID) {
            return base.Channel.SetProcessEventAsync(eventData, fieldName, values, sessionID);
        }
        
        public int ProcessEventDone(InSite.App.UserServices.Data_ProcessEvents eventData, string sessionID) {
            return base.Channel.ProcessEventDone(eventData, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> ProcessEventDoneAsync(InSite.App.UserServices.Data_ProcessEvents eventData, string sessionID) {
            return base.Channel.ProcessEventDoneAsync(eventData, sessionID);
        }
        
        public string GetDialogResID(int systemID, int dialogID, string sessionID) {
            return base.Channel.GetDialogResID(systemID, dialogID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetDialogResIDAsync(int systemID, int dialogID, string sessionID) {
            return base.Channel.GetDialogResIDAsync(systemID, dialogID, sessionID);
        }
        
        public string GetBpName(int systemID, int bpID, string sessionID) {
            return base.Channel.GetBpName(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetBpNameAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetBpNameAsync(systemID, bpID, sessionID);
        }
        
        public string GetCompanyName(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyName(systemID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyNameAsync(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyNameAsync(systemID, companyID, sessionID);
        }
        
        public string GetBpCompanyName(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetBpCompanyName(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetBpCompanyNameAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetBpCompanyNameAsync(systemID, bpID, companyID, sessionID);
        }
        
        public int GetUnreadMailCount(int systemID, int userID, string sessionID) {
            return base.Channel.GetUnreadMailCount(systemID, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetUnreadMailCountAsync(int systemID, int userID, string sessionID) {
            return base.Channel.GetUnreadMailCountAsync(systemID, userID, sessionID);
        }
        
        public int GetOpenProcessCount(int systemID, int bpID, int userID, string sessionID) {
            return base.Channel.GetOpenProcessCount(systemID, bpID, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetOpenProcessCountAsync(int systemID, int bpID, int userID, string sessionID) {
            return base.Channel.GetOpenProcessCountAsync(systemID, bpID, userID, sessionID);
        }
        
        public InSite.App.UserServices.Master_Roles[] GetRoles(int systemID, int bpID, int typeID, string sessionID) {
            return base.Channel.GetRoles(systemID, bpID, typeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Roles[]> GetRolesAsync(int systemID, int bpID, int typeID, string sessionID) {
            return base.Channel.GetRolesAsync(systemID, bpID, typeID, sessionID);
        }
        
        public int GetDefaultRoleID(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultRoleID(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultRoleIDAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultRoleIDAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.Master_AccessAreas[] GetAccessAreas(int systemID, int bpID, string sessionID) {
            return base.Channel.GetAccessAreas(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_AccessAreas[]> GetAccessAreasAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetAccessAreasAsync(systemID, bpID, sessionID);
        }
        
        public int GetDefaultAccessAreaID(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultAccessAreaID(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultAccessAreaIDAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultAccessAreaIDAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.Master_TimeSlotGroups[] GetTimeSlotGroups(int systemID, int bpID, string sessionID) {
            return base.Channel.GetTimeSlotGroups(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_TimeSlotGroups[]> GetTimeSlotGroupsAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetTimeSlotGroupsAsync(systemID, bpID, sessionID);
        }
        
        public int GetDefaultTimeSlotGroupID(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultTimeSlotGroupID(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultTimeSlotGroupIDAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultTimeSlotGroupIDAsync(systemID, bpID, sessionID);
        }
        
        public int GetDefaultSTAccessAreaID(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultSTAccessAreaID(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultSTAccessAreaIDAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultSTAccessAreaIDAsync(systemID, bpID, sessionID);
        }
        
        public int GetDefaultSTTimeSlotGroupID(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultSTTimeSlotGroupID(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultSTTimeSlotGroupIDAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetDefaultSTTimeSlotGroupIDAsync(systemID, bpID, sessionID);
        }
        
        public int SetDefaultAccessAreaForUser(InSite.App.UserServices.Master_EmployeeAccessAreas accessArea, string sessionID) {
            return base.Channel.SetDefaultAccessAreaForUser(accessArea, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SetDefaultAccessAreaForUserAsync(InSite.App.UserServices.Master_EmployeeAccessAreas accessArea, string sessionID) {
            return base.Channel.SetDefaultAccessAreaForUserAsync(accessArea, sessionID);
        }
        
        public int SetDefaultAccessAreaForVisitor(InSite.App.UserServices.Data_ShortTermAccessAreas accessArea, string sessionID) {
            return base.Channel.SetDefaultAccessAreaForVisitor(accessArea, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SetDefaultAccessAreaForVisitorAsync(InSite.App.UserServices.Data_ShortTermAccessAreas accessArea, string sessionID) {
            return base.Channel.SetDefaultAccessAreaForVisitorAsync(accessArea, sessionID);
        }
        
        public InSite.App.UserServices.Master_Passes GetPassData(int systemID, int bpID, string chipID, string sessionID) {
            return base.Channel.GetPassData(systemID, bpID, chipID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Passes> GetPassDataAsync(int systemID, int bpID, string chipID, string sessionID) {
            return base.Channel.GetPassDataAsync(systemID, bpID, chipID, sessionID);
        }
        
        public InSite.App.UserServices.System_Variables[] GetVariables(int systemID, int fieldID, string sessionID) {
            return base.Channel.GetVariables(systemID, fieldID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Variables[]> GetVariablesAsync(int systemID, int fieldID, string sessionID) {
            return base.Channel.GetVariablesAsync(systemID, fieldID, sessionID);
        }
        
        public int GetFieldID(int systemID, string fieldName, string sessionID) {
            return base.Channel.GetFieldID(systemID, fieldName, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetFieldIDAsync(int systemID, string fieldName, string sessionID) {
            return base.Channel.GetFieldIDAsync(systemID, fieldName, sessionID);
        }
        
        public InSite.App.UserServices.System_Variables[] GetVariablesByFieldName(int systemID, string fieldName, string sessionID) {
            return base.Channel.GetVariablesByFieldName(systemID, fieldName, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Variables[]> GetVariablesByFieldNameAsync(int systemID, string fieldName, string sessionID) {
            return base.Channel.GetVariablesByFieldNameAsync(systemID, fieldName, sessionID);
        }
        
        public InSite.App.UserServices.Master_Translations GetTranslation(int systemID, int bpID, string fieldName, string languageIDUser, string languageIDClient, System.Tuple<string, string>[] values, string sessionID) {
            return base.Channel.GetTranslation(systemID, bpID, fieldName, languageIDUser, languageIDClient, values, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Translations> GetTranslationAsync(int systemID, int bpID, string fieldName, string languageIDUser, string languageIDClient, System.Tuple<string, string>[] values, string sessionID) {
            return base.Channel.GetTranslationAsync(systemID, bpID, fieldName, languageIDUser, languageIDClient, values, sessionID);
        }
        
        public InSite.App.UserServices.GetShortTermVisitors_Result[] GetShortTermVisitors(int systemID, int bpID, string sessionID) {
            return base.Channel.GetShortTermVisitors(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetShortTermVisitors_Result[]> GetShortTermVisitorsAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetShortTermVisitorsAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.System_Tables[] GetHistoryTables(string sessionID) {
            return base.Channel.GetHistoryTables(sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Tables[]> GetHistoryTablesAsync(string sessionID) {
            return base.Channel.GetHistoryTablesAsync(sessionID);
        }
        
        public InSite.App.UserServices.Master_Users[] GetUsers(int systemID, string sessionID) {
            return base.Channel.GetUsers(systemID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users[]> GetUsersAsync(int systemID, string sessionID) {
            return base.Channel.GetUsersAsync(systemID, sessionID);
        }
        
        public InSite.App.UserServices.GetPresentPersonsCount_Result GetPresentPersonsCount(int systemID, int bpID, string sessionID) {
            return base.Channel.GetPresentPersonsCount(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentPersonsCount_Result> GetPresentPersonsCountAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetPresentPersonsCountAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.GetPassBillings_Result[] GetPassBillings(int systemID, int bpID, int companyID, int evaluationPeriod, System.DateTime dateFrom, System.DateTime dateUntil, int level, string remarks, string sessionID) {
            return base.Channel.GetPassBillings(systemID, bpID, companyID, evaluationPeriod, dateFrom, dateUntil, level, remarks, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPassBillings_Result[]> GetPassBillingsAsync(int systemID, int bpID, int companyID, int evaluationPeriod, System.DateTime dateFrom, System.DateTime dateUntil, int level, string remarks, string sessionID) {
            return base.Channel.GetPassBillingsAsync(systemID, bpID, companyID, evaluationPeriod, dateFrom, dateUntil, level, remarks, sessionID);
        }
        
        public InSite.App.UserServices.GetTariffData_Result[] GetTariffData(int systemID, int tariffID, int tariffContractID, int tariffScopeID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, int reportType, string sessionID) {
            return base.Channel.GetTariffData(systemID, tariffID, tariffContractID, tariffScopeID, bpID, companyID, dateFrom, dateUntil, reportType, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetTariffData_Result[]> GetTariffDataAsync(int systemID, int tariffID, int tariffContractID, int tariffScopeID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, int reportType, string sessionID) {
            return base.Channel.GetTariffDataAsync(systemID, tariffID, tariffContractID, tariffScopeID, bpID, companyID, dateFrom, dateUntil, reportType, sessionID);
        }
        
        public InSite.App.UserServices.GetPresenceData_Result[] GetPresenceData(int systemID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, bool nameIsVisible, int companyLevel, int compressLevel, string sessionID) {
            return base.Channel.GetPresenceData(systemID, bpID, companyID, dateFrom, dateUntil, nameIsVisible, companyLevel, compressLevel, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPresenceData_Result[]> GetPresenceDataAsync(int systemID, int bpID, int companyID, System.DateTime dateFrom, System.DateTime dateUntil, bool nameIsVisible, int companyLevel, int compressLevel, string sessionID) {
            return base.Channel.GetPresenceDataAsync(systemID, bpID, companyID, dateFrom, dateUntil, nameIsVisible, companyLevel, compressLevel, sessionID);
        }
        
        public InSite.App.UserServices.GetPresenceDataNow_Result[] GetPresenceDataNow(int systemID, int bpID, int companyID, int companyLevel, int accessAreaID, System.DateTime presenceDay, bool presentOnly, string sessionID) {
            return base.Channel.GetPresenceDataNow(systemID, bpID, companyID, companyLevel, accessAreaID, presenceDay, presentOnly, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPresenceDataNow_Result[]> GetPresenceDataNowAsync(int systemID, int bpID, int companyID, int companyLevel, int accessAreaID, System.DateTime presenceDay, bool presentOnly, string sessionID) {
            return base.Channel.GetPresenceDataNowAsync(systemID, bpID, companyID, companyLevel, accessAreaID, presenceDay, presentOnly, sessionID);
        }
        
        public InSite.App.UserServices.GetTradeReportData_Result[] GetTradeReportData(int systemID, int bpID, System.DateTime dateFrom, System.DateTime dateUntil, string sessionID) {
            return base.Channel.GetTradeReportData(systemID, bpID, dateFrom, dateUntil, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetTradeReportData_Result[]> GetTradeReportDataAsync(int systemID, int bpID, System.DateTime dateFrom, System.DateTime dateUntil, string sessionID) {
            return base.Channel.GetTradeReportDataAsync(systemID, bpID, dateFrom, dateUntil, sessionID);
        }
        
        public InSite.App.UserServices.GetTemplates_Result[] GetTemplates(int systemID, int bpID, string dialogName, bool withFileData, string sessionID) {
            return base.Channel.GetTemplates(systemID, bpID, dialogName, withFileData, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetTemplates_Result[]> GetTemplatesAsync(int systemID, int bpID, string dialogName, bool withFileData, string sessionID) {
            return base.Channel.GetTemplatesAsync(systemID, bpID, dialogName, withFileData, sessionID);
        }
        
        public InSite.App.UserServices.Master_Templates GetTemplate(int systemID, int bpID, int templateID, string sessionID) {
            return base.Channel.GetTemplate(systemID, bpID, templateID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Templates> GetTemplateAsync(int systemID, int bpID, int templateID, string sessionID) {
            return base.Channel.GetTemplateAsync(systemID, bpID, templateID, sessionID);
        }
        
        public int SendMessage(int systemID, int jobID, int receiverID, string subject, string body, string sessionID) {
            return base.Channel.SendMessage(systemID, jobID, receiverID, subject, body, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SendMessageAsync(int systemID, int jobID, int receiverID, string subject, string body, string sessionID) {
            return base.Channel.SendMessageAsync(systemID, jobID, receiverID, subject, body, sessionID);
        }
        
        public int SendMessageToUsersWithRight(int systemID, int bpID, int jobID, int dialogID, int actionID, string subject, string body, string sessionID) {
            return base.Channel.SendMessageToUsersWithRight(systemID, bpID, jobID, dialogID, actionID, subject, body, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SendMessageToUsersWithRightAsync(int systemID, int bpID, int jobID, int dialogID, int actionID, string subject, string body, string sessionID) {
            return base.Channel.SendMessageToUsersWithRightAsync(systemID, bpID, jobID, dialogID, actionID, subject, body, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyTariff_Result GetCompanyTariff(int systemID, int companyID, int tariffScopeID, string sessionID) {
            return base.Channel.GetCompanyTariff(systemID, companyID, tariffScopeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyTariff_Result> GetCompanyTariffAsync(int systemID, int companyID, int tariffScopeID, string sessionID) {
            return base.Channel.GetCompanyTariffAsync(systemID, companyID, tariffScopeID, sessionID);
        }
        
        public InSite.App.UserServices.GetReportMinWageData_Result[] GetReportMinWageData(int systemID, int bpID, System.DateTime monthFrom, System.DateTime monthUntil, int companyID, string sessionID) {
            return base.Channel.GetReportMinWageData(systemID, bpID, monthFrom, monthUntil, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetReportMinWageData_Result[]> GetReportMinWageDataAsync(int systemID, int bpID, System.DateTime monthFrom, System.DateTime monthUntil, int companyID, string sessionID) {
            return base.Channel.GetReportMinWageDataAsync(systemID, bpID, monthFrom, monthUntil, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyInfo_Result[] GetCompanyInfo(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyInfo(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyInfo_Result[]> GetCompanyInfoAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyInfoAsync(systemID, bpID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetMWAttestationRequests_Result[] GetMWAttestationRequests(int systemID, int bpID, int companyID, int requestID, string sessionID) {
            return base.Channel.GetMWAttestationRequests(systemID, bpID, companyID, requestID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetMWAttestationRequests_Result[]> GetMWAttestationRequestsAsync(int systemID, int bpID, int companyID, int requestID, string sessionID) {
            return base.Channel.GetMWAttestationRequestsAsync(systemID, bpID, companyID, requestID, sessionID);
        }
        
        public InSite.App.UserServices.System_Dialogs GetDialog(int systemID, int dialogID, string sessionID) {
            return base.Channel.GetDialog(systemID, dialogID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Dialogs> GetDialogAsync(int systemID, int dialogID, string sessionID) {
            return base.Channel.GetDialogAsync(systemID, dialogID, sessionID);
        }
        
        public InSite.App.UserServices.Pass GetPass(int systemID, int bpID, int employeeID, bool withFileData, string sessionID) {
            return base.Channel.GetPass(systemID, bpID, employeeID, withFileData, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Pass> GetPassAsync(int systemID, int bpID, int employeeID, bool withFileData, string sessionID) {
            return base.Channel.GetPassAsync(systemID, bpID, employeeID, withFileData, sessionID);
        }
        
        public InSite.App.UserServices.ShortTermPassPrint GetShortTermPassPrint(int systemID, int bpID, int printID, string sessionID) {
            return base.Channel.GetShortTermPassPrint(systemID, bpID, printID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.ShortTermPassPrint> GetShortTermPassPrintAsync(int systemID, int bpID, int printID, string sessionID) {
            return base.Channel.GetShortTermPassPrintAsync(systemID, bpID, printID, sessionID);
        }
        
        public InSite.App.UserServices.Master_Users GetUser(int systemID, int userID, string sessionID) {
            return base.Channel.GetUser(systemID, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users> GetUserAsync(int systemID, int userID, string sessionID) {
            return base.Channel.GetUserAsync(systemID, userID, sessionID);
        }
        
        public string GetShortTermPassTemplate(int systemID, int bpID, int shortTermPassTypeID, string sessionID) {
            return base.Channel.GetShortTermPassTemplate(systemID, bpID, shortTermPassTypeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetShortTermPassTemplateAsync(int systemID, int bpID, int shortTermPassTypeID, string sessionID) {
            return base.Channel.GetShortTermPassTemplateAsync(systemID, bpID, shortTermPassTypeID, sessionID);
        }
        
        public string GetEmployeePassTemplate(int systemID, int bpID, int employeeID, int dialogID, string sessionID) {
            return base.Channel.GetEmployeePassTemplate(systemID, bpID, employeeID, dialogID, sessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeePassTemplateAsync(int systemID, int bpID, int employeeID, int dialogID, string sessionID) {
            return base.Channel.GetEmployeePassTemplateAsync(systemID, bpID, employeeID, dialogID, sessionID);
        }
        
        public InSite.App.UserServices.GetPresentPersonsPerAccessArea_Result[] GetPresentPersonsPerAccessArea(int systemID, int bpID, string sessionID) {
            return base.Channel.GetPresentPersonsPerAccessArea(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentPersonsPerAccessArea_Result[]> GetPresentPersonsPerAccessAreaAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetPresentPersonsPerAccessAreaAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.GetMissingFirstAiders_Result[] GetMissingFirstAiders(int systemID, int bpID, string sessionID) {
            return base.Channel.GetMissingFirstAiders(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetMissingFirstAiders_Result[]> GetMissingFirstAidersAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetMissingFirstAidersAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.Master_AccessSystems GetLastUpdateAccessControl(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastUpdateAccessControl(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_AccessSystems> GetLastUpdateAccessControlAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastUpdateAccessControlAsync(systemID, bpID, sessionID);
        }
        
        public System.DateTime GetLastBackupDate(string sessionID) {
            return base.Channel.GetLastBackupDate(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLastBackupDateAsync(string sessionID) {
            return base.Channel.GetLastBackupDateAsync(sessionID);
        }
        
        public System.DateTime GetLastCompressDate(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastCompressDate(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLastCompressDateAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastCompressDateAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.GetPassInfo_Result[] GetPassInfo(string internalID, string sessionID) {
            return base.Channel.GetPassInfo(internalID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPassInfo_Result[]> GetPassInfoAsync(string internalID, string sessionID) {
            return base.Channel.GetPassInfoAsync(internalID, sessionID);
        }
        
        public InSite.App.UserServices.Master_CompanyContacts GetCompanyMWContact(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyMWContact(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_CompanyContacts> GetCompanyMWContactAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetCompanyMWContactAsync(systemID, bpID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.Master_Users GetCompanyAdmin(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyAdmin(systemID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Master_Users> GetCompanyAdminAsync(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyAdminAsync(systemID, companyID, sessionID);
        }
        
        public bool HasRightForDialog(int systemID, int bpID, int dialogID, int roleID, string sessionID) {
            return base.Channel.HasRightForDialog(systemID, bpID, dialogID, roleID, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> HasRightForDialogAsync(int systemID, int bpID, int dialogID, int roleID, string sessionID) {
            return base.Channel.HasRightForDialogAsync(systemID, bpID, dialogID, roleID, sessionID);
        }
        
        public byte[] GetRelevantDocumentImage(int systemID, int bpID, int relevantDocumentID, int maxWidth, int maxHeight, string sessionID) {
            return base.Channel.GetRelevantDocumentImage(systemID, bpID, relevantDocumentID, maxWidth, maxHeight, sessionID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetRelevantDocumentImageAsync(int systemID, int bpID, int relevantDocumentID, int maxWidth, int maxHeight, string sessionID) {
            return base.Channel.GetRelevantDocumentImageAsync(systemID, bpID, relevantDocumentID, maxWidth, maxHeight, sessionID);
        }
        
        public void SetMailRead(int systemID, int mailID, bool mailRead, string sessionID) {
            base.Channel.SetMailRead(systemID, mailID, mailRead, sessionID);
        }
        
        public System.Threading.Tasks.Task SetMailReadAsync(int systemID, int mailID, bool mailRead, string sessionID) {
            return base.Channel.SetMailReadAsync(systemID, mailID, mailRead, sessionID);
        }
        
        public InSite.App.UserServices.Document GetDocument(int systemID, int documentID, string sessionID) {
            return base.Channel.GetDocument(systemID, documentID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Document> GetDocumentAsync(int systemID, int documentID, string sessionID) {
            return base.Channel.GetDocumentAsync(systemID, documentID, sessionID);
        }
        
        public InSite.App.UserServices.Document RenderReport(string reportParameter, string sessionID) {
            return base.Channel.RenderReport(reportParameter, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Document> RenderReportAsync(string reportParameter, string sessionID) {
            return base.Channel.RenderReportAsync(reportParameter, sessionID);
        }
        
        public int SetAttachmentToMessage(int systemID, int jobID, int messageID, byte[] fileData, string fileName, string fileType, string sessionID) {
            return base.Channel.SetAttachmentToMessage(systemID, jobID, messageID, fileData, fileName, fileType, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> SetAttachmentToMessageAsync(int systemID, int jobID, int messageID, byte[] fileData, string fileName, string fileType, string sessionID) {
            return base.Channel.SetAttachmentToMessageAsync(systemID, jobID, messageID, fileData, fileName, fileType, sessionID);
        }
        
        public InSite.App.UserServices.System_Help GetHelp(int systemID, int dialogID, int fieldID, string languageID, string sessionID) {
            return base.Channel.GetHelp(systemID, dialogID, fieldID, languageID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Help> GetHelpAsync(int systemID, int dialogID, int fieldID, string languageID, string sessionID) {
            return base.Channel.GetHelpAsync(systemID, dialogID, fieldID, languageID, sessionID);
        }
        
        public InSite.App.UserServices.GetExpiringTariffs_Result[] GetExpiringTariffs(int systemID, string sessionID) {
            return base.Channel.GetExpiringTariffs(systemID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetExpiringTariffs_Result[]> GetExpiringTariffsAsync(int systemID, string sessionID) {
            return base.Channel.GetExpiringTariffsAsync(systemID, sessionID);
        }
        
        public void SessionLogger(string sessionID, int sessionState, System.Nullable<int> systemID, System.Nullable<int> userID) {
            base.Channel.SessionLogger(sessionID, sessionState, systemID, userID);
        }
        
        public System.Threading.Tasks.Task SessionLoggerAsync(string sessionID, int sessionState, System.Nullable<int> systemID, System.Nullable<int> userID) {
            return base.Channel.SessionLoggerAsync(sessionID, sessionState, systemID, userID);
        }
        
        public bool IsPassCaseFirstIssue(int systemID, int bpID, int replacementPassCaseID, string sessionID) {
            return base.Channel.IsPassCaseFirstIssue(systemID, bpID, replacementPassCaseID, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> IsPassCaseFirstIssueAsync(int systemID, int bpID, int replacementPassCaseID, string sessionID) {
            return base.Channel.IsPassCaseFirstIssueAsync(systemID, bpID, replacementPassCaseID, sessionID);
        }
        
        public bool AllTerminalsOnline(int systemID, int bpID, string sessionID) {
            return base.Channel.AllTerminalsOnline(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> AllTerminalsOnlineAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.AllTerminalsOnlineAsync(systemID, bpID, sessionID);
        }
        
        public InSite.App.UserServices.GetEmployeeDuplicates_Result[] GetEmployeeDuplicates(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeeDuplicates(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetEmployeeDuplicates_Result[]> GetEmployeeDuplicatesAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeeDuplicatesAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public InSite.App.UserServices.GetCompanyCentralDuplicates_Result[] GetCompanyCentralDuplicates(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyCentralDuplicates(systemID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetCompanyCentralDuplicates_Result[]> GetCompanyCentralDuplicatesAsync(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyCentralDuplicatesAsync(systemID, companyID, sessionID);
        }
        
        public InSite.App.UserServices.GetUserDuplicates_Result[] GetUserDuplicates(int systemID, int userID, string sessionID) {
            return base.Channel.GetUserDuplicates(systemID, userID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetUserDuplicates_Result[]> GetUserDuplicatesAsync(int systemID, int userID, string sessionID) {
            return base.Channel.GetUserDuplicatesAsync(systemID, userID, sessionID);
        }
        
        public InSite.App.UserServices.System_Companies GetCompanyCentralInfo(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyCentralInfo(systemID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.System_Companies> GetCompanyCentralInfoAsync(int systemID, int companyID, string sessionID) {
            return base.Channel.GetCompanyCentralInfoAsync(systemID, companyID, sessionID);
        }
        
        public System.DateTime GetLastCorrectionDate(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastCorrectionDate(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLastCorrectionDateAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.GetLastCorrectionDateAsync(systemID, bpID, sessionID);
        }
        
        public int GetMainContractorStatus(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetMainContractorStatus(systemID, bpID, companyID, sessionID);
        }
        
        public System.Threading.Tasks.Task<int> GetMainContractorStatusAsync(int systemID, int bpID, int companyID, string sessionID) {
            return base.Channel.GetMainContractorStatusAsync(systemID, bpID, companyID, sessionID);
        }
        
        public void UpdateThumbnails(int systemID, int bpID, string sessionID) {
            base.Channel.UpdateThumbnails(systemID, bpID, sessionID);
        }
        
        public System.Threading.Tasks.Task UpdateThumbnailsAsync(int systemID, int bpID, string sessionID) {
            return base.Channel.UpdateThumbnailsAsync(systemID, bpID, sessionID);
        }
        
        public byte[] GetEmployeePhotoData(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeePhotoData(systemID, bpID, employeeID, sessionID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetEmployeePhotoDataAsync(int systemID, int bpID, int employeeID, string sessionID) {
            return base.Channel.GetEmployeePhotoDataAsync(systemID, bpID, employeeID, sessionID);
        }
        
        public bool EmploymentStatusMWObligate(int systemID, int bpID, int employmentStatusID, string sessionID) {
            return base.Channel.EmploymentStatusMWObligate(systemID, bpID, employmentStatusID, sessionID);
        }
        
        public System.Threading.Tasks.Task<bool> EmploymentStatusMWObligateAsync(int systemID, int bpID, int employmentStatusID, string sessionID) {
            return base.Channel.EmploymentStatusMWObligateAsync(systemID, bpID, employmentStatusID, sessionID);
        }
        
        public InSite.App.UserServices.GetPresentFirstAiders_Result[] GetAvailableFirstAiders(int systemID, int bpID) {
            return base.Channel.GetAvailableFirstAiders(systemID, bpID);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.GetPresentFirstAiders_Result[]> GetAvailableFirstAidersAsync(int systemID, int bpID) {
            return base.Channel.GetAvailableFirstAidersAsync(systemID, bpID);
        }
        
        public InSite.App.UserServices.Data_AccessEvents[] GetAccessHistoryForShortTermPasses(int systemId, int bpId, string internalId) {
            return base.Channel.GetAccessHistoryForShortTermPasses(systemId, bpId, internalId);
        }
        
        public System.Threading.Tasks.Task<InSite.App.UserServices.Data_AccessEvents[]> GetAccessHistoryForShortTermPassesAsync(int systemId, int bpId, string internalId) {
            return base.Channel.GetAccessHistoryForShortTermPassesAsync(systemId, bpId, internalId);
        }
    }
}
