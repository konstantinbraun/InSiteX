//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InSite.App.CMServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CMServices.IContainerManagement")]
    public interface IContainerManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/EmployeeData", ReplyAction="http://tempuri.org/IContainerManagement/EmployeeDataResponse")]
        string EmployeeData(int systemID, int bpID, int employeeID, int dataAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/EmployeeData", ReplyAction="http://tempuri.org/IContainerManagement/EmployeeDataResponse")]
        System.Threading.Tasks.Task<string> EmployeeDataAsync(int systemID, int bpID, int employeeID, int dataAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/CompanyData", ReplyAction="http://tempuri.org/IContainerManagement/CompanyDataResponse")]
        string CompanyData(int systemID, int bpID, int companyID, int dataAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/CompanyData", ReplyAction="http://tempuri.org/IContainerManagement/CompanyDataResponse")]
        System.Threading.Tasks.Task<string> CompanyDataAsync(int systemID, int bpID, int companyID, int dataAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/TradeData", ReplyAction="http://tempuri.org/IContainerManagement/TradeDataResponse")]
        string TradeData(int systemID, int bpID, int tradeID, int dataAction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContainerManagement/TradeData", ReplyAction="http://tempuri.org/IContainerManagement/TradeDataResponse")]
        System.Threading.Tasks.Task<string> TradeDataAsync(int systemID, int bpID, int tradeID, int dataAction);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContainerManagementChannel : InSite.App.CMServices.IContainerManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContainerManagementClient : System.ServiceModel.ClientBase<InSite.App.CMServices.IContainerManagement>, InSite.App.CMServices.IContainerManagement {
        
        public ContainerManagementClient() {
        }
        
        public ContainerManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContainerManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContainerManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContainerManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string EmployeeData(int systemID, int bpID, int employeeID, int dataAction) {
            return base.Channel.EmployeeData(systemID, bpID, employeeID, dataAction);
        }
        
        public System.Threading.Tasks.Task<string> EmployeeDataAsync(int systemID, int bpID, int employeeID, int dataAction) {
            return base.Channel.EmployeeDataAsync(systemID, bpID, employeeID, dataAction);
        }
        
        public string CompanyData(int systemID, int bpID, int companyID, int dataAction) {
            return base.Channel.CompanyData(systemID, bpID, companyID, dataAction);
        }
        
        public System.Threading.Tasks.Task<string> CompanyDataAsync(int systemID, int bpID, int companyID, int dataAction) {
            return base.Channel.CompanyDataAsync(systemID, bpID, companyID, dataAction);
        }
        
        public string TradeData(int systemID, int bpID, int tradeID, int dataAction) {
            return base.Channel.TradeData(systemID, bpID, tradeID, dataAction);
        }
        
        public System.Threading.Tasks.Task<string> TradeDataAsync(int systemID, int bpID, int tradeID, int dataAction) {
            return base.Channel.TradeDataAsync(systemID, bpID, tradeID, dataAction);
        }
    }
}
