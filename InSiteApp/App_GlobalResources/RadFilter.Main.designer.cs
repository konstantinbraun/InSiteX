//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources.RadFilter {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder-Klasse
    // mit einem Tool wie ResGen oder Visual Studio automatisch generiert.
    // Bearbeiten Sie zum Hinzufügen oder Entfernen eines Members die RESX-Datei, und führen Sie dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen das Visual Studio-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Main {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Main() {
        }
        
        /// <summary>
        ///   Gibt die von dieser Klasse verwendete zwischengespeicherte ResourceManager-Instanz zurück.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.RadFilter.Main", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenlookups, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Expression ähnelt.
        /// </summary>
        internal static string AddExpressionToolTip {
            get {
                return ResourceManager.GetString("AddExpressionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Group ähnelt.
        /// </summary>
        internal static string AddGroupToolTip {
            get {
                return ResourceManager.GetString("AddGroupToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply ähnelt.
        /// </summary>
        internal static string ApplyButtonText {
            get {
                return ResourceManager.GetString("ApplyButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die And ähnelt.
        /// </summary>
        internal static string BetweenDelimeterText {
            get {
                return ResourceManager.GetString("BetweenDelimeterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Between ähnelt.
        /// </summary>
        internal static string FilterFunctionBetween {
            get {
                return ResourceManager.GetString("FilterFunctionBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contains ähnelt.
        /// </summary>
        internal static string FilterFunctionContains {
            get {
                return ResourceManager.GetString("FilterFunctionContains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DoesNotContain ähnelt.
        /// </summary>
        internal static string FilterFunctionDoesNotContain {
            get {
                return ResourceManager.GetString("FilterFunctionDoesNotContain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EndsWith ähnelt.
        /// </summary>
        internal static string FilterFunctionEndsWith {
            get {
                return ResourceManager.GetString("FilterFunctionEndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EqualTo ähnelt.
        /// </summary>
        internal static string FilterFunctionEqualTo {
            get {
                return ResourceManager.GetString("FilterFunctionEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GreaterThan ähnelt.
        /// </summary>
        internal static string FilterFunctionGreaterThan {
            get {
                return ResourceManager.GetString("FilterFunctionGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GreaterThanOrEqualTo ähnelt.
        /// </summary>
        internal static string FilterFunctionGreaterThanOrEqualTo {
            get {
                return ResourceManager.GetString("FilterFunctionGreaterThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IsEmpty ähnelt.
        /// </summary>
        internal static string FilterFunctionIsEmpty {
            get {
                return ResourceManager.GetString("FilterFunctionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IsNull ähnelt.
        /// </summary>
        internal static string FilterFunctionIsNull {
            get {
                return ResourceManager.GetString("FilterFunctionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LessThan ähnelt.
        /// </summary>
        internal static string FilterFunctionLessThan {
            get {
                return ResourceManager.GetString("FilterFunctionLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LessThanOrEqualTo ähnelt.
        /// </summary>
        internal static string FilterFunctionLessThanOrEqualTo {
            get {
                return ResourceManager.GetString("FilterFunctionLessThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NotBetween ähnelt.
        /// </summary>
        internal static string FilterFunctionNotBetween {
            get {
                return ResourceManager.GetString("FilterFunctionNotBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NotEqualTo ähnelt.
        /// </summary>
        internal static string FilterFunctionNotEqualTo {
            get {
                return ResourceManager.GetString("FilterFunctionNotEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NotIsEmpty ähnelt.
        /// </summary>
        internal static string FilterFunctionNotIsEmpty {
            get {
                return ResourceManager.GetString("FilterFunctionNotIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NotIsNull ähnelt.
        /// </summary>
        internal static string FilterFunctionNotIsNull {
            get {
                return ResourceManager.GetString("FilterFunctionNotIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StartsWith ähnelt.
        /// </summary>
        internal static string FilterFunctionStartsWith {
            get {
                return ResourceManager.GetString("FilterFunctionStartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die And ähnelt.
        /// </summary>
        internal static string GroupOperationAnd {
            get {
                return ResourceManager.GetString("GroupOperationAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not And ähnelt.
        /// </summary>
        internal static string GroupOperationNotAnd {
            get {
                return ResourceManager.GetString("GroupOperationNotAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Or ähnelt.
        /// </summary>
        internal static string GroupOperationNotOr {
            get {
                return ResourceManager.GetString("GroupOperationNotOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Or ähnelt.
        /// </summary>
        internal static string GroupOperationOr {
            get {
                return ResourceManager.GetString("GroupOperationOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Between ähnelt.
        /// </summary>
        internal static string PreviewProviderBetweenText {
            get {
                return ResourceManager.GetString("PreviewProviderBetweenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contains ähnelt.
        /// </summary>
        internal static string PreviewProviderContainsText {
            get {
                return ResourceManager.GetString("PreviewProviderContainsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Does Not Contain ähnelt.
        /// </summary>
        internal static string PreviewProviderDoesNotContainText {
            get {
                return ResourceManager.GetString("PreviewProviderDoesNotContainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ends With ähnelt.
        /// </summary>
        internal static string PreviewProviderEndsWithText {
            get {
                return ResourceManager.GetString("PreviewProviderEndsWithText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die = ähnelt.
        /// </summary>
        internal static string PreviewProviderEqualToText {
            get {
                return ResourceManager.GetString("PreviewProviderEqualToText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &gt;= ähnelt.
        /// </summary>
        internal static string PreviewProviderGreaterThanOrEqualToText {
            get {
                return ResourceManager.GetString("PreviewProviderGreaterThanOrEqualToText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &gt; ähnelt.
        /// </summary>
        internal static string PreviewProviderGreaterThanText {
            get {
                return ResourceManager.GetString("PreviewProviderGreaterThanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Empty ähnelt.
        /// </summary>
        internal static string PreviewProviderIsEmptyText {
            get {
                return ResourceManager.GetString("PreviewProviderIsEmptyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Null ähnelt.
        /// </summary>
        internal static string PreviewProviderIsNullText {
            get {
                return ResourceManager.GetString("PreviewProviderIsNullText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;= ähnelt.
        /// </summary>
        internal static string PreviewProviderLessThanOrEqualToText {
            get {
                return ResourceManager.GetString("PreviewProviderLessThanOrEqualToText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt; ähnelt.
        /// </summary>
        internal static string PreviewProviderLessThanText {
            get {
                return ResourceManager.GetString("PreviewProviderLessThanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NotBetween ähnelt.
        /// </summary>
        internal static string PreviewProviderNotBetweenText {
            get {
                return ResourceManager.GetString("PreviewProviderNotBetweenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;&gt; ähnelt.
        /// </summary>
        internal static string PreviewProviderNotEqualToText {
            get {
                return ResourceManager.GetString("PreviewProviderNotEqualToText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Not Empty ähnelt.
        /// </summary>
        internal static string PreviewProviderNotIsEmptyText {
            get {
                return ResourceManager.GetString("PreviewProviderNotIsEmptyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Not Null ähnelt.
        /// </summary>
        internal static string PreviewProviderNotIsNullText {
            get {
                return ResourceManager.GetString("PreviewProviderNotIsNullText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starts With ähnelt.
        /// </summary>
        internal static string PreviewProviderStartsWithText {
            get {
                return ResourceManager.GetString("PreviewProviderStartsWithText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Item ähnelt.
        /// </summary>
        internal static string RemoveToolTip {
            get {
                return ResourceManager.GetString("RemoveToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please do not remove this key. ähnelt.
        /// </summary>
        internal static string ReservedResource {
            get {
                return ResourceManager.GetString("ReservedResource", resourceCulture);
            }
        }
    }
}
